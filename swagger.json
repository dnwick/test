{
  "openapi" : "3.0.1",
  "info" : {
    "description" : "This is the api for contal services.Most requests if not all will require Authentication.",
    "title" : "Contal Services API",
    "version" : "v2"
  },
  "servers" : [ {
    "url" : "http://localhost:8080/jserv/api",
    "description" : "Generated server url"
  } ],
  "paths" : {
    "/forgot-password" : {
      "post" : {
        "operationId" : "forgotPassword",
        "parameters" : [ {
          "in" : "query",
          "name" : "header",
          "required" : true,
          "schema" : {
            "$ref" : "#/components/schemas/HeaderBeanImpl"
          }
        }, {
          "in" : "query",
          "name" : "email",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "secretAnswer",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK"
          }
        },
        "tags" : [ "Authentication Controller" ]
      }
    },
    "/health-check" : {
      "get" : {
        "operationId" : "checkDatabaseConnection",
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            },
            "description" : "OK"
          }
        },
        "tags" : [ "health-check-controller" ]
      }
    },
    "/login" : {
      "post" : {
        "operationId" : "login_1",
        "parameters" : [ {
          "in" : "query",
          "name" : "header",
          "required" : true,
          "schema" : {
            "$ref" : "#/components/schemas/HeaderBeanImpl"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/LoginPayload"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "OK"
          }
        },
        "tags" : [ "Authentication Controller" ]
      }
    },
    "/logout" : {
      "post" : {
        "operationId" : "login",
        "responses" : {
          "200" : {
            "description" : "OK"
          }
        },
        "tags" : [ "Authentication Controller" ]
      }
    },
    "/profile" : {
      "get" : {
        "operationId" : "getProfile",
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProfileDto"
                }
              }
            },
            "description" : "OK"
          }
        },
        "tags" : [ "Profile Controller" ]
      },
      "post" : {
        "operationId" : "updateProfile",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/ProfileDto"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProfileDto"
                }
              }
            },
            "description" : "Return full profile of the User"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiError"
                }
              }
            },
            "description" : "Return Validation error"
          }
        },
        "summary" : "Update User Profile",
        "tags" : [ "Profile Controller" ]
      }
    },
    "/profile/card" : {
      "get" : {
        "operationId" : "getCardData",
        "parameters" : [ {
          "in" : "query",
          "name" : "header",
          "required" : true,
          "schema" : {
            "$ref" : "#/components/schemas/HeaderBeanImpl"
          }
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CardData"
                }
              }
            },
            "description" : "OK"
          }
        },
        "tags" : [ "Profile Controller" ]
      },
      "post" : {
        "operationId" : "addCreditCard",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/CreditCardDto"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CreditCardDto"
                }
              }
            },
            "description" : "OK"
          }
        },
        "tags" : [ "Profile Controller" ]
      }
    },
    "/profile/card/{cardId}" : {
      "delete" : {
        "operationId" : "deleteCreditCard",
        "parameters" : [ {
          "in" : "path",
          "name" : "cardId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK"
          }
        },
        "tags" : [ "Profile Controller" ]
      }
    },
    "/profile/companion" : {
      "get" : {
        "operationId" : "getCompanions",
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/TravellerDto"
                  }
                }
              }
            },
            "description" : "OK"
          }
        },
        "summary" : "Retrieve a list of companions linked to the session profile...",
        "tags" : [ "Profile Controller" ]
      },
      "post" : {
        "operationId" : "updateCompanion",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/TravellerDto"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/TravellerDto"
                }
              }
            },
            "description" : "OK"
          }
        },
        "summary" : "Create/update a companion for the session profile...",
        "tags" : [ "Profile Controller" ]
      }
    },
    "/profile/companion/link" : {
      "put" : {
        "operationId" : "linkCompanion",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/LinkPayload"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            },
            "description" : "OK"
          }
        },
        "summary" : "Create/update a companion for the session profile...",
        "tags" : [ "Profile Controller" ]
      }
    },
    "/profile/companion/{travellerId}" : {
      "delete" : {
        "operationId" : "deleteCompanion",
        "parameters" : [ {
          "in" : "path",
          "name" : "travellerId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK"
          }
        },
        "summary" : "Remove a companion read/write grant from the session profile...",
        "tags" : [ "Profile Controller" ]
      },
      "put" : {
        "operationId" : "grantCompanion",
        "parameters" : [ {
          "in" : "path",
          "name" : "travellerId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK"
          }
        },
        "summary" : "Grant a companion read/write permissions...",
        "tags" : [ "Profile Controller" ]
      }
    },
    "/profile/company" : {
      "get" : {
        "operationId" : "getCompany",
        "parameters" : [ {
          "in" : "query",
          "name" : "linked",
          "required" : false,
          "schema" : {
            "type" : "boolean",
            "default" : false
          }
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/ProfileCompanyDto"
                  }
                }
              }
            },
            "description" : "OK"
          }
        },
        "summary" : "Retrieve a list of session profile company members...",
        "tags" : [ "Profile Controller" ]
      }
    },
    "/profile/company/member" : {
      "post" : {
        "operationId" : "activateCompany",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/ActivateMemberPayload"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "OK"
          }
        },
        "summary" : "Add a company member to the session profile...",
        "tags" : [ "Profile Controller" ]
      }
    },
    "/profile/company/{companyId}/member" : {
      "get" : {
        "operationId" : "getCompanyMembers",
        "parameters" : [ {
          "in" : "path",
          "name" : "companyId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/ProfileMemberDto"
                  }
                }
              }
            },
            "description" : "OK"
          }
        },
        "summary" : "Retrieve a list of members associated with a specific company...",
        "tags" : [ "Profile Controller" ]
      }
    },
    "/profile/company/{companyId}/member/{memberId}" : {
      "delete" : {
        "operationId" : "deactivateCompany",
        "parameters" : [ {
          "in" : "path",
          "name" : "companyId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "path",
          "name" : "memberId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK"
          }
        },
        "summary" : "Remove a company member from the session profile...",
        "tags" : [ "Profile Controller" ]
      }
    },
    "/profile/detailed" : {
      "get" : {
        "operationId" : "getTravelProfile",
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProfileDetailedDto"
                }
              }
            },
            "description" : "OK"
          }
        },
        "summary" : "Retrieve profile information (extension of /profile with added details for the app)...",
        "tags" : [ "Profile Controller" ]
      }
    },
    "/profile/group" : {
      "get" : {
        "operationId" : "getGroups",
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/GroupDto"
                  }
                }
              }
            },
            "description" : "OK"
          }
        },
        "summary" : "Retrieve a list of groups associated with the session profile...",
        "tags" : [ "Profile Controller" ]
      }
    },
    "/profile/group/traveller/{travellerId}" : {
      "delete" : {
        "operationId" : "removeTraveller",
        "parameters" : [ {
          "in" : "path",
          "name" : "travellerId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK"
          }
        },
        "summary" : "Delete a traveller/profile member by id...",
        "tags" : [ "Profile Controller" ]
      }
    },
    "/profile/group/{groupId}" : {
      "delete" : {
        "operationId" : "deleteGroup",
        "parameters" : [ {
          "in" : "path",
          "name" : "groupId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK"
          }
        },
        "summary" : "Deletes a specific group and removes all members...",
        "tags" : [ "Profile Controller" ]
      }
    },
    "/profile/group/{groupId}/traveller/{travellerId}" : {
      "post" : {
        "operationId" : "addTraveller",
        "parameters" : [ {
          "in" : "path",
          "name" : "groupId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "path",
          "name" : "travellerId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK"
          }
        },
        "summary" : "Add a traveller into the specified group...",
        "tags" : [ "Profile Controller" ]
      }
    },
    "/profile/travel/document/{documentId}" : {
      "delete" : {
        "operationId" : "deleteDocument_1",
        "parameters" : [ {
          "in" : "path",
          "name" : "documentId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK"
          }
        },
        "summary" : "Delete a travel documents by id...",
        "tags" : [ "Profile Controller" ]
      }
    },
    "/profile/travel/loyalty/{accountId}" : {
      "delete" : {
        "operationId" : "deleteDocument",
        "parameters" : [ {
          "in" : "path",
          "name" : "accountId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK"
          }
        },
        "summary" : "Delete a loyalty account by id...",
        "tags" : [ "Profile Controller" ]
      }
    },
    "/profile/trip" : {
      "post" : {
        "operationId" : "getTrips",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/TripRequest"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/TripDto"
                  }
                }
              }
            },
            "description" : "OK"
          }
        },
        "summary" : "Retrieves a list of trip dto for logged in profile...",
        "tags" : [ "Profile Controller" ]
      }
    },
    "/profile/trip/{tripNumber}" : {
      "post" : {
        "operationId" : "getTrips_1",
        "parameters" : [ {
          "in" : "query",
          "name" : "header",
          "required" : true,
          "schema" : {
            "$ref" : "#/components/schemas/HeaderBeanImpl"
          }
        }, {
          "in" : "path",
          "name" : "tripNumber",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/TripDto"
                  }
                }
              }
            },
            "description" : "OK"
          }
        },
        "summary" : "Retrieves a trip dto for the provided tripNumber...",
        "tags" : [ "Profile Controller" ]
      }
    },
    "/register" : {
      "put" : {
        "operationId" : "registerUser",
        "parameters" : [ {
          "in" : "query",
          "name" : "header",
          "required" : true,
          "schema" : {
            "$ref" : "#/components/schemas/HeaderBeanImpl"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/RegistrationPayload"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProfileDto"
                }
              }
            },
            "description" : "OK"
          }
        },
        "tags" : [ "Authentication Controller" ]
      }
    },
    "/swagger/pdf" : {
      "get" : {
        "operationId" : "generatePDF",
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            },
            "description" : "OK"
          }
        },
        "tags" : [ "PDF generator Controller" ]
      }
    },
    "/travel/affiliate" : {
      "get" : {
        "operationId" : "retrieveAffiliates",
        "parameters" : [ {
          "in" : "query",
          "name" : "header",
          "required" : true,
          "schema" : {
            "$ref" : "#/components/schemas/HeaderBeanImpl"
          }
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/AffiliateExternalSiteDto"
                  }
                }
              }
            },
            "description" : "OK"
          }
        },
        "tags" : [ "Travel Controller" ]
      },
      "post" : {
        "operationId" : "saveAffiliate",
        "parameters" : [ {
          "in" : "query",
          "name" : "header",
          "required" : true,
          "schema" : {
            "$ref" : "#/components/schemas/HeaderBeanImpl"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/AffiliateExternalSiteDto"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "OK"
          }
        },
        "tags" : [ "Travel Controller" ]
      }
    },
    "/travel/affiliate/{siteId}" : {
      "delete" : {
        "operationId" : "removeAffiliate",
        "parameters" : [ {
          "in" : "query",
          "name" : "header",
          "required" : true,
          "schema" : {
            "$ref" : "#/components/schemas/HeaderBeanImpl"
          }
        }, {
          "in" : "path",
          "name" : "siteId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK"
          }
        },
        "tags" : [ "Travel Controller" ]
      }
    },
    "/travel/air/book" : {
      "post" : {
        "operationId" : "book_2",
        "parameters" : [ {
          "in" : "query",
          "name" : "header",
          "required" : true,
          "schema" : {
            "$ref" : "#/components/schemas/HeaderBeanImpl"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/STBookAir"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/STBookAirResponse"
                }
              }
            },
            "description" : "OK"
          }
        },
        "tags" : [ "Travel Air Controller" ]
      }
    },
    "/travel/air/confirm" : {
      "post" : {
        "operationId" : "review_1",
        "parameters" : [ {
          "in" : "query",
          "name" : "header",
          "required" : true,
          "schema" : {
            "$ref" : "#/components/schemas/HeaderBeanImpl"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/STConfirmAir"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/STConfirmAirResponse"
                }
              }
            },
            "description" : "OK"
          }
        },
        "tags" : [ "Travel Air Controller" ]
      }
    },
    "/travel/air/search" : {
      "post" : {
        "operationId" : "searchFlights",
        "parameters" : [ {
          "in" : "query",
          "name" : "header",
          "required" : true,
          "schema" : {
            "$ref" : "#/components/schemas/HeaderBeanImpl"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/STSearchAir"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ResponseEntitySTSearchAirResponse"
                }
              }
            },
            "description" : "OK"
          }
        },
        "tags" : [ "Travel Air Controller" ]
      }
    },
    "/travel/air/ssr" : {
      "post" : {
        "operationId" : "addAirSSR",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/SSRPayload"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SSRAssignResponse"
                }
              }
            },
            "description" : "OK"
          }
        },
        "tags" : [ "Travel Air Controller" ]
      }
    },
    "/travel/air/ssr/search" : {
      "post" : {
        "operationId" : "searchAirSSR",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/SSRPayload"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SSRSearchResponse"
                }
              }
            },
            "description" : "OK"
          }
        },
        "tags" : [ "Travel Air Controller" ]
      }
    },
    "/travel/air/terms" : {
      "get" : {
        "operationId" : "getTerms",
        "parameters" : [ {
          "in" : "query",
          "name" : "header",
          "required" : true,
          "schema" : {
            "$ref" : "#/components/schemas/HeaderBeanImpl"
          }
        }, {
          "in" : "query",
          "name" : "termid",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "fareinfoid",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            },
            "description" : "OK"
          }
        },
        "tags" : [ "Travel Air Controller" ]
      }
    },
    "/travel/approval" : {
      "get" : {
        "operationId" : "getTravelApprovals",
        "parameters" : [ {
          "in" : "query",
          "name" : "companyId",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/TravelApprovalResponse"
                }
              }
            },
            "description" : "OK"
          }
        },
        "tags" : [ "Travel Controller" ]
      },
      "post" : {
        "operationId" : "saveTravelApproval",
        "parameters" : [ {
          "in" : "query",
          "name" : "header",
          "required" : true,
          "schema" : {
            "$ref" : "#/components/schemas/HeaderBeanImpl"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/SaveApprovalRequest"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/TravelApprovalDto"
                }
              }
            },
            "description" : "OK"
          }
        },
        "tags" : [ "Travel Controller" ]
      }
    },
    "/travel/car/book" : {
      "post" : {
        "operationId" : "book_1",
        "parameters" : [ {
          "in" : "query",
          "name" : "header",
          "required" : true,
          "schema" : {
            "$ref" : "#/components/schemas/HeaderBeanImpl"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/STBookCar"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/STBookCarResponse"
                }
              }
            },
            "description" : "OK"
          }
        },
        "tags" : [ "Travel Car Controller" ]
      }
    },
    "/travel/car/confirm" : {
      "post" : {
        "operationId" : "confirm",
        "parameters" : [ {
          "in" : "query",
          "name" : "header",
          "required" : true,
          "schema" : {
            "$ref" : "#/components/schemas/HeaderBeanImpl"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/STConfirmCar"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : { },
            "description" : "OK"
          }
        },
        "tags" : [ "Travel Car Controller" ]
      }
    },
    "/travel/car/search" : {
      "post" : {
        "operationId" : "search_1",
        "parameters" : [ {
          "in" : "query",
          "name" : "header",
          "required" : true,
          "schema" : {
            "$ref" : "#/components/schemas/HeaderBeanImpl"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/STSearchCar"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ResponseEntitySTSearchResponse"
                }
              }
            },
            "description" : "OK"
          }
        },
        "tags" : [ "Travel Car Controller" ]
      }
    },
    "/travel/company/{companyId}/group" : {
      "get" : {
        "operationId" : "retrieveGroups",
        "parameters" : [ {
          "in" : "path",
          "name" : "companyId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK"
          }
        },
        "tags" : [ "Travel Controller" ]
      },
      "post" : {
        "operationId" : "createGroup",
        "parameters" : [ {
          "in" : "path",
          "name" : "companyId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/CreateGroupPayload"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "OK"
          }
        },
        "tags" : [ "Travel Controller" ]
      }
    },
    "/travel/hotel" : {
      "post" : {
        "operationId" : "loadHotelDetails",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/LoadHotelPayload"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/StatefulResponseSTHotel"
                }
              }
            },
            "description" : "OK"
          }
        },
        "tags" : [ "Travel Hotel Controller" ]
      }
    },
    "/travel/hotel/book" : {
      "post" : {
        "operationId" : "book",
        "parameters" : [ {
          "in" : "query",
          "name" : "header",
          "required" : true,
          "schema" : {
            "$ref" : "#/components/schemas/HeaderBeanImpl"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/STBookHotel"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/STBookHotelResponse"
                }
              }
            },
            "description" : "OK"
          }
        },
        "summary" : "Creates trip in galaxy (be advised trip payment is required after this step)",
        "tags" : [ "Travel Hotel Controller" ]
      }
    },
    "/travel/hotel/confirm" : {
      "post" : {
        "operationId" : "review",
        "parameters" : [ {
          "in" : "query",
          "name" : "header",
          "required" : true,
          "schema" : {
            "$ref" : "#/components/schemas/HeaderBeanImpl"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/STConfirmHotel"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/STConfirmHotelResponse"
                }
              }
            },
            "description" : "OK"
          }
        },
        "tags" : [ "Travel Hotel Controller" ]
      }
    },
    "/travel/hotel/lookups" : {
      "get" : {
        "operationId" : "getAll",
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AllLookupsPayLoad"
                }
              }
            },
            "description" : "OK"
          }
        },
        "tags" : [ "Lookup Controller" ]
      }
    },
    "/travel/hotel/lookups/amenities" : {
      "get" : {
        "operationId" : "getAllAmenity",
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/EnumPayload"
                  }
                }
              }
            },
            "description" : "OK"
          }
        },
        "tags" : [ "Lookup Controller" ]
      }
    },
    "/travel/hotel/lookups/disabilities" : {
      "get" : {
        "operationId" : "getOtaDisabilities",
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/EnumPayload"
                  }
                }
              }
            },
            "description" : "OK"
          }
        },
        "tags" : [ "Lookup Controller" ]
      }
    },
    "/travel/hotel/lookups/mealPlans" : {
      "get" : {
        "operationId" : "getMealPlans",
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/EnumPayload"
                  }
                }
              }
            },
            "description" : "OK"
          }
        },
        "tags" : [ "Lookup Controller" ]
      }
    },
    "/travel/hotel/lookups/pricing/compare" : {
      "post" : {
        "operationId" : "getPricingCompare",
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            },
            "description" : "OK"
          }
        },
        "tags" : [ "Lookup Controller" ]
      }
    },
    "/travel/hotel/lookups/room-amenities" : {
      "get" : {
        "operationId" : "getRoomAmenity",
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/EnumPayload"
                  }
                }
              }
            },
            "description" : "OK"
          }
        },
        "tags" : [ "Lookup Controller" ]
      }
    },
    "/travel/hotel/lookups/securities" : {
      "get" : {
        "operationId" : "getOatSecurityCodes",
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/EnumPayload"
                  }
                }
              }
            },
            "description" : "OK"
          }
        },
        "tags" : [ "Lookup Controller" ]
      }
    },
    "/travel/hotel/lookups/unitOfMeasurements" : {
      "get" : {
        "operationId" : "getUnitOfMeasurements",
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/EnumPayload"
                  }
                }
              }
            },
            "description" : "OK"
          }
        },
        "tags" : [ "Lookup Controller" ]
      }
    },
    "/travel/hotel/pnr" : {
      "post" : {
        "deprecated" : true,
        "operationId" : "getRoomDetails",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/StatefulRequestSTPNRRequest"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/StatefulResponseSTPnr"
                }
              }
            },
            "description" : "OK"
          }
        },
        "tags" : [ "Travel Hotel Controller" ]
      }
    },
    "/travel/hotel/room/price" : {
      "post" : {
        "operationId" : "getHotelPrice",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/StatefulRequestSTPricingRequest"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/StatefulResponseSTRoom"
                }
              }
            },
            "description" : "OK"
          }
        },
        "summary" : "Retrieves pricing and policy information for the hotel/room",
        "tags" : [ "Travel Hotel Controller" ]
      }
    },
    "/travel/hotel/search" : {
      "post" : {
        "operationId" : "search",
        "parameters" : [ {
          "in" : "query",
          "name" : "header",
          "required" : true,
          "schema" : {
            "$ref" : "#/components/schemas/HeaderBeanImpl"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/STSearchHotel"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ResponseEntitySTSearchResponse"
                }
              }
            },
            "description" : "OK"
          }
        },
        "tags" : [ "Travel Hotel Controller" ]
      }
    },
    "/travel/hotel/sell" : {
      "post" : {
        "operationId" : "sell",
        "parameters" : [ {
          "in" : "query",
          "name" : "header",
          "required" : true,
          "schema" : {
            "$ref" : "#/components/schemas/HeaderBeanImpl"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/StatefulRequestSTSellHotel"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/STBookHotelResponse"
                }
              }
            },
            "description" : "OK"
          }
        },
        "summary" : "commits payment",
        "tags" : [ "Travel Hotel Controller" ]
      }
    },
    "/travel/itinerary/email" : {
      "get" : {
        "operationId" : "emailItinerary",
        "parameters" : [ {
          "in" : "query",
          "name" : "tripId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK"
          }
        },
        "summary" : "Sends an email to the logged in profile with their itinerary...",
        "tags" : [ "Travel Controller" ]
      }
    },
    "/travel/segment/air" : {
      "post" : {
        "operationId" : "addAirSegment",
        "parameters" : [ {
          "in" : "query",
          "name" : "header",
          "required" : true,
          "schema" : {
            "$ref" : "#/components/schemas/HeaderBeanImpl"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/CreateAirSegmentPayload"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AirSegmentResponse"
                }
              }
            },
            "description" : "OK"
          }
        },
        "tags" : [ "Travel Controller" ]
      }
    },
    "/travel/segment/approval" : {
      "delete" : {
        "operationId" : "removeSegmentApproval",
        "parameters" : [ {
          "in" : "query",
          "name" : "tripSegmentId",
          "required" : false,
          "schema" : {
            "type" : "string",
            "default" : ""
          }
        }, {
          "in" : "query",
          "name" : "passiveSegmentId",
          "required" : false,
          "schema" : {
            "type" : "string",
            "default" : ""
          }
        }, {
          "in" : "query",
          "name" : "travelApprovalId",
          "required" : false,
          "schema" : {
            "type" : "string",
            "default" : ""
          }
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CompanyDto"
                }
              }
            },
            "description" : "OK"
          }
        },
        "summary" : "Deletes a segment approval.",
        "tags" : [ "Travel Controller" ]
      }
    },
    "/travel/segment/car" : {
      "post" : {
        "operationId" : "post_1",
        "parameters" : [ {
          "in" : "query",
          "name" : "header",
          "required" : true,
          "schema" : {
            "$ref" : "#/components/schemas/HeaderBeanImpl"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/CreateCarSegmentPayload"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SegmentResponse"
                }
              }
            },
            "description" : "OK"
          }
        },
        "tags" : [ "Travel Controller" ]
      }
    },
    "/travel/segment/hotel" : {
      "post" : {
        "operationId" : "create",
        "parameters" : [ {
          "in" : "query",
          "name" : "header",
          "required" : true,
          "schema" : {
            "$ref" : "#/components/schemas/HeaderBeanImpl"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/CreateHotelSegmentPayload"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SegmentResponse"
                }
              }
            },
            "description" : "OK"
          }
        },
        "tags" : [ "Travel Controller" ]
      }
    },
    "/travel/segment/other" : {
      "post" : {
        "operationId" : "post",
        "parameters" : [ {
          "in" : "query",
          "name" : "header",
          "required" : true,
          "schema" : {
            "$ref" : "#/components/schemas/HeaderBeanImpl"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/CreateOtherSegmentPayload"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SegmentResponse"
                }
              }
            },
            "description" : "OK"
          }
        },
        "tags" : [ "Travel Controller" ]
      }
    },
    "/travel/segment/refresh" : {
      "get" : {
        "operationId" : "refreshSegment",
        "responses" : {
          "200" : {
            "description" : "OK"
          }
        },
        "summary" : "Refreshes session segments.",
        "tags" : [ "Travel Controller" ]
      }
    },
    "/travel/segment/{segmentId}" : {
      "delete" : {
        "operationId" : "deleteSegment",
        "parameters" : [ {
          "in" : "query",
          "name" : "header",
          "required" : true,
          "schema" : {
            "$ref" : "#/components/schemas/HeaderBeanImpl"
          }
        }, {
          "in" : "path",
          "name" : "segmentId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK"
          }
        },
        "summary" : "Deletes a travel approval.",
        "tags" : [ "Travel Controller" ]
      }
    },
    "/v1/travel/cart" : {
      "get" : {
        "operationId" : "getTripCart",
        "parameters" : [ {
          "in" : "query",
          "name" : "header",
          "required" : true,
          "schema" : {
            "$ref" : "#/components/schemas/HeaderBeanImpl"
          }
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CartDtoCartItemDto"
                }
              }
            },
            "description" : "OK"
          }
        },
        "tags" : [ "Travel Controller" ]
      }
    },
    "/v1/travel/cart/checkout" : {
      "post" : {
        "operationId" : "payTrip",
        "parameters" : [ {
          "in" : "query",
          "name" : "header",
          "required" : true,
          "schema" : {
            "$ref" : "#/components/schemas/HeaderBeanImpl"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/CartPaymentDto"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/TripCartPaymentInvoiceDto"
                  }
                }
              }
            },
            "description" : "OK"
          }
        },
        "tags" : [ "Travel Controller" ]
      }
    },
    "/v1/travel/cart/finalise" : {
      "get" : {
        "operationId" : "setupTripPayment_1",
        "parameters" : [ {
          "in" : "query",
          "name" : "header",
          "required" : true,
          "schema" : {
            "$ref" : "#/components/schemas/HeaderBeanImpl"
          }
        }, {
          "in" : "query",
          "name" : "allowAmax",
          "required" : false,
          "schema" : {
            "type" : "boolean",
            "default" : false
          }
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CartDtoCartItemFinalisedDto"
                }
              }
            },
            "description" : "OK"
          }
        },
        "tags" : [ "Travel Controller" ]
      }
    },
    "/v2/travel/cart" : {
      "get" : {
        "operationId" : "getCart",
        "parameters" : [ {
          "in" : "query",
          "name" : "header",
          "required" : true,
          "schema" : {
            "$ref" : "#/components/schemas/HeaderBeanImpl"
          }
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CartDtoCartItemDto"
                }
              }
            },
            "description" : "OK"
          }
        },
        "tags" : [ "Travel Controller" ]
      }
    },
    "/v2/travel/cart/checkout" : {
      "post" : {
        "operationId" : "checkout",
        "parameters" : [ {
          "in" : "query",
          "name" : "header",
          "required" : true,
          "schema" : {
            "$ref" : "#/components/schemas/HeaderBeanImpl"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/CartPaymentDto"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/TripCartPaymentInvoiceDto"
                  }
                }
              }
            },
            "description" : "OK"
          }
        },
        "tags" : [ "Travel Controller" ]
      }
    },
    "/v2/travel/cart/finalise" : {
      "get" : {
        "operationId" : "setupTripPayment",
        "parameters" : [ {
          "in" : "query",
          "name" : "header",
          "required" : true,
          "schema" : {
            "$ref" : "#/components/schemas/HeaderBeanImpl"
          }
        }, {
          "in" : "query",
          "name" : "allowAmax",
          "required" : false,
          "schema" : {
            "type" : "boolean",
            "default" : false
          }
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CartDtoCartItemFinalisedDto"
                }
              }
            },
            "description" : "OK"
          }
        },
        "tags" : [ "Travel Controller" ]
      }
    }
  },
  "components" : {
    "schemas" : {
      "ActivateMemberPayload" : {
        "type" : "object",
        "properties" : {
          "accessLevel" : {
            "type" : "string",
            "enum" : [ "UNSET", "INHERIT", "VIEW", "EDIT", "ARRANGE", "MANAGE", "APPROVE", "ARRANGE_APPROVE" ]
          },
          "memberId" : {
            "type" : "string"
          },
          "shared" : {
            "type" : "boolean"
          }
        }
      },
      "AddressDto" : {
        "type" : "object",
        "properties" : {
          "addressline1" : {
            "type" : "string"
          },
          "addressline2" : {
            "type" : "string"
          },
          "city" : {
            "type" : "string"
          },
          "country" : {
            "type" : "string"
          },
          "postcode" : {
            "pattern" : "^\\d{1,3}$",
            "type" : "string",
            "description" : "Post code of the user",
            "example" : "4501"
          },
          "state" : {
            "type" : "string"
          },
          "suburb" : {
            "type" : "string"
          }
        }
      },
      "AddressInfoType" : {
        "type" : "object",
        "properties" : {
          "addressLine" : {
            "type" : "array",
            "xml" : {
              "name" : "AddressLine"
            },
            "items" : {
              "type" : "string",
              "xml" : {
                "name" : "AddressLine"
              }
            }
          },
          "bldgRoom" : {
            "type" : "array",
            "xml" : {
              "name" : "BldgRoom"
            },
            "items" : {
              "$ref" : "#/components/schemas/BldgRoom"
            }
          },
          "cityName" : {
            "type" : "string",
            "xml" : {
              "name" : "CityName"
            }
          },
          "countryName" : {
            "$ref" : "#/components/schemas/CountryNameType"
          },
          "county" : {
            "type" : "string",
            "xml" : {
              "name" : "County"
            }
          },
          "defaultInd" : {
            "type" : "boolean",
            "xml" : {
              "name" : "DefaultInd",
              "attribute" : true
            }
          },
          "formattedInd" : {
            "type" : "boolean",
            "xml" : {
              "name" : "FormattedInd",
              "attribute" : true
            }
          },
          "postalCode" : {
            "type" : "string",
            "xml" : {
              "name" : "PostalCode"
            }
          },
          "remark" : {
            "type" : "string",
            "xml" : {
              "name" : "Remark",
              "attribute" : true
            }
          },
          "rph" : {
            "type" : "string",
            "xml" : {
              "name" : "RPH",
              "attribute" : true
            }
          },
          "shareMarketInd" : {
            "type" : "string",
            "xml" : {
              "name" : "ShareMarketInd",
              "attribute" : true
            }
          },
          "shareSynchInd" : {
            "type" : "string",
            "xml" : {
              "name" : "ShareSynchInd",
              "attribute" : true
            }
          },
          "stateProv" : {
            "$ref" : "#/components/schemas/StateProvType"
          },
          "streetNmbr" : {
            "$ref" : "#/components/schemas/StreetNmbr"
          },
          "type" : {
            "type" : "string",
            "xml" : {
              "name" : "Type",
              "attribute" : true
            }
          },
          "useType" : {
            "type" : "string",
            "xml" : {
              "name" : "UseType",
              "attribute" : true
            }
          }
        }
      },
      "AffiliateCompanyDto" : {
        "type" : "object",
        "properties" : {
          "abn" : {
            "type" : "string"
          },
          "address" : {
            "$ref" : "#/components/schemas/AddressDto"
          },
          "name" : {
            "type" : "string"
          },
          "paymentBank" : {
            "$ref" : "#/components/schemas/AffiliatePaymentBankDto"
          }
        }
      },
      "AffiliateExternalSiteDto" : {
        "type" : "object",
        "properties" : {
          "active" : {
            "type" : "boolean"
          },
          "company" : {
            "$ref" : "#/components/schemas/AffiliateCompanyDto"
          },
          "id" : {
            "type" : "string"
          },
          "searchFormUrl" : {
            "type" : "string"
          },
          "siteCode" : {
            "type" : "string"
          }
        }
      },
      "AffiliatePaymentBankDto" : {
        "type" : "object",
        "properties" : {
          "accountNumber" : {
            "type" : "string"
          },
          "bank" : {
            "type" : "string"
          },
          "branch" : {
            "type" : "string"
          },
          "bsb" : {
            "type" : "string"
          }
        }
      },
      "AirSegmentResponse" : {
        "type" : "object",
        "properties" : {
          "airline" : {
            "type" : "string"
          },
          "allowUserEdit" : {
            "type" : "boolean"
          },
          "companyId" : {
            "type" : "string"
          },
          "cost" : {
            "type" : "string"
          },
          "dateFrom" : {
            "pattern" : "yyyy-MM-dd'T'HH:mm:ss",
            "type" : "string",
            "format" : "date-time"
          },
          "dateTo" : {
            "pattern" : "yyyy-MM-dd'T'HH:mm:ss",
            "type" : "string",
            "format" : "date-time"
          },
          "destination" : {
            "type" : "string"
          },
          "fareType" : {
            "type" : "string"
          },
          "flightNumber" : {
            "type" : "string"
          },
          "notes" : {
            "type" : "string"
          },
          "origin" : {
            "type" : "string"
          },
          "passengers" : {
            "uniqueItems" : true,
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/PassengerDto"
            }
          },
          "quoteId" : {
            "type" : "string"
          },
          "reloc" : {
            "type" : "string"
          },
          "travelApprovalId" : {
            "type" : "string"
          },
          "travelEventId" : {
            "type" : "string"
          }
        }
      },
      "AllLookupsPayLoad" : {
        "type" : "object",
        "properties" : {
          "amenities" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/EnumPayload"
            }
          },
          "disabilities" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/EnumPayload"
            }
          },
          "hotelClass" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/EnumPayload"
            }
          },
          "mealPlans" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/EnumPayload"
            }
          },
          "roomAmenities" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/EnumPayload"
            }
          },
          "securities" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/EnumPayload"
            }
          },
          "unitOfMeasurements" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/EnumPayload"
            }
          }
        }
      },
      "ApiError" : {
        "type" : "object",
        "properties" : {
          "message" : {
            "type" : "string"
          },
          "timestamp" : {
            "type" : "string",
            "format" : "date-time"
          },
          "url" : {
            "type" : "string"
          },
          "validationErrors" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "string"
            }
          }
        }
      },
      "Award" : {
        "type" : "object",
        "properties" : {
          "provider" : {
            "type" : "string",
            "xml" : {
              "name" : "Provider",
              "attribute" : true
            }
          },
          "rating" : {
            "type" : "string",
            "xml" : {
              "name" : "Rating",
              "attribute" : true
            }
          }
        }
      },
      "BareCompanyDto" : {
        "type" : "object",
        "properties" : {
          "approvals" : {
            "type" : "array",
            "description" : "List of approvals",
            "items" : {
              "$ref" : "#/components/schemas/TravelApprovalDto"
            }
          },
          "branch" : {
            "$ref" : "#/components/schemas/RequiredOptionsDto"
          },
          "costcentre" : {
            "$ref" : "#/components/schemas/RequiredOptionsDto"
          },
          "department" : {
            "$ref" : "#/components/schemas/RequiredOptionsDto"
          },
          "id" : {
            "type" : "string"
          },
          "location" : {
            "$ref" : "#/components/schemas/RequiredOptionsDto"
          },
          "name" : {
            "type" : "string"
          },
          "permissions" : {
            "$ref" : "#/components/schemas/RequiredOptionsDto"
          }
        }
      },
      "BldgRoom" : {
        "type" : "object",
        "properties" : {
          "bldgNameIndicator" : {
            "type" : "boolean",
            "xml" : {
              "name" : "BldgNameIndicator",
              "attribute" : true
            }
          },
          "value" : {
            "type" : "string"
          }
        }
      },
      "BuildCompanyPayload" : {
        "type" : "object",
        "properties" : {
          "allConfigs" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/CompanyConfigDto"
            }
          },
          "configs" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/CompanyConfigDto"
            }
          },
          "countryCodes" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "currencyCodes" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "groups" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/CompanyGroupDto"
            }
          },
          "id" : {
            "type" : "string"
          },
          "name" : {
            "type" : "string"
          }
        }
      },
      "CabinRowDto" : {
        "type" : "object",
        "properties" : {
          "exit" : {
            "type" : "boolean"
          },
          "seats" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/CabinSeatDto"
            }
          }
        }
      },
      "CabinSeatDto" : {
        "type" : "object",
        "properties" : {
          "exit" : {
            "type" : "boolean"
          },
          "id" : {
            "type" : "string"
          },
          "seatCode" : {
            "type" : "string"
          },
          "seatName" : {
            "type" : "string"
          },
          "type" : {
            "type" : "string"
          }
        }
      },
      "CardData" : {
        "type" : "object",
        "properties" : {
          "cards" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/CreditCardDto"
            }
          },
          "types" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/CreditCardTypeDto"
            }
          }
        }
      },
      "CardTypesDto" : {
        "type" : "object",
        "properties" : {
          "ax" : {
            "type" : "boolean"
          },
          "bc" : {
            "type" : "boolean"
          },
          "db" : {
            "type" : "boolean"
          },
          "mc" : {
            "type" : "boolean"
          },
          "surcharges" : {
            "$ref" : "#/components/schemas/SurchargeDto"
          },
          "vi" : {
            "type" : "boolean"
          }
        }
      },
      "CartDtoCartItemDto" : {
        "type" : "object",
        "properties" : {
          "items" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/CartItemDto"
            }
          },
          "total" : {
            "type" : "number"
          }
        }
      },
      "CartDtoCartItemFinalisedDto" : {
        "type" : "object",
        "properties" : {
          "items" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/CartItemFinalisedDto"
            }
          },
          "total" : {
            "type" : "number"
          }
        }
      },
      "CartItemDto" : {
        "type" : "object",
        "properties" : {
          "creationDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "credits" : {
            "type" : "number"
          },
          "id" : {
            "type" : "string"
          },
          "segments" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/SegmentDetailDto"
            }
          },
          "total" : {
            "type" : "number"
          }
        }
      },
      "CartItemFinalisedDto" : {
        "type" : "object",
        "properties" : {
          "cardTypes" : {
            "$ref" : "#/components/schemas/CardTypesDto"
          },
          "cards" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/OptionValidTypeDto"
            }
          },
          "creationDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "credits" : {
            "type" : "number"
          },
          "gateway" : {
            "type" : "string"
          },
          "id" : {
            "type" : "string"
          },
          "segmentPayments" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/SegmentPaymentDto"
            }
          },
          "segments" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/SegmentDetailDto"
            }
          },
          "supplierPayments" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/SupplierPaymentDto"
            }
          },
          "total" : {
            "type" : "number"
          }
        }
      },
      "CartPaymentDto" : {
        "required" : [ "cardDetails" ],
        "type" : "object",
        "properties" : {
          "cardDetails" : {
            "$ref" : "#/components/schemas/STCreditCardDetails"
          },
          "creditAmount" : {
            "type" : "string"
          }
        }
      },
      "CodeNameAmount" : {
        "type" : "object",
        "properties" : {
          "code" : {
            "type" : "string"
          },
          "description" : {
            "type" : "string"
          },
          "value" : {
            "type" : "number"
          }
        }
      },
      "CommissionableAmount" : {
        "type" : "object",
        "properties" : {
          "amount" : {
            "type" : "number",
            "xml" : {
              "name" : "Amount",
              "attribute" : true
            }
          },
          "currencyCode" : {
            "type" : "string",
            "xml" : {
              "name" : "CurrencyCode",
              "attribute" : true
            }
          },
          "decimalPlaces" : {
            "type" : "integer",
            "format" : "int64",
            "xml" : {
              "name" : "DecimalPlaces",
              "attribute" : true
            }
          },
          "taxInclusiveIndicator" : {
            "type" : "boolean",
            "xml" : {
              "name" : "TaxInclusiveIndicator",
              "attribute" : true
            }
          }
        }
      },
      "CompanyConfigDto" : {
        "type" : "object",
        "properties" : {
          "arrangerEdit" : {
            "type" : "boolean"
          },
          "defaultValue" : {
            "type" : "object"
          },
          "fieldData" : {
            "type" : "string"
          },
          "fieldType" : {
            "type" : "string"
          },
          "id" : {
            "type" : "string"
          },
          "info" : {
            "type" : "string"
          },
          "key" : {
            "type" : "string"
          },
          "options" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/OptionObject"
            }
          },
          "required" : {
            "type" : "boolean"
          },
          "travellerEdit" : {
            "type" : "boolean"
          },
          "value" : {
            "type" : "string"
          },
          "visible" : {
            "type" : "boolean"
          }
        }
      },
      "CompanyDto" : {
        "type" : "object",
        "properties" : {
          "approvals" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/TravelApprovalDto"
            }
          },
          "branch" : {
            "$ref" : "#/components/schemas/JSON"
          },
          "costcentre" : {
            "$ref" : "#/components/schemas/JSON"
          },
          "department" : {
            "$ref" : "#/components/schemas/JSON"
          },
          "errorDto" : {
            "$ref" : "#/components/schemas/DTO"
          },
          "erroroccured" : {
            "type" : "boolean"
          },
          "id" : {
            "type" : "string"
          },
          "location" : {
            "$ref" : "#/components/schemas/JSON"
          },
          "name" : {
            "type" : "string"
          },
          "permissions" : {
            "$ref" : "#/components/schemas/JSON"
          }
        }
      },
      "CompanyFieldDto" : {
        "type" : "object",
        "properties" : {
          "customField1" : {
            "type" : "string"
          },
          "customField2" : {
            "type" : "string"
          },
          "customField3" : {
            "type" : "string"
          },
          "description" : {
            "type" : "string"
          },
          "reference" : {
            "type" : "string"
          }
        }
      },
      "CompanyGroupDto" : {
        "type" : "object",
        "properties" : {
          "approvalLevel" : {
            "type" : "integer",
            "format" : "int32"
          },
          "approvalLimit" : {
            "type" : "number"
          },
          "approvers" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/NameEmailDto"
            }
          },
          "arrangers" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/NameEmailDto"
            }
          },
          "id" : {
            "type" : "string"
          },
          "members" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/NameEmailDto"
            }
          },
          "name" : {
            "type" : "string"
          },
          "policyApprovalLimit" : {
            "type" : "number"
          }
        }
      },
      "ConsumerType" : {
        "required" : [ "uniqueID" ],
        "type" : "object",
        "properties" : {
          "uniqueID" : {
            "type" : "string",
            "xml" : {
              "name" : "UniqueID"
            }
          }
        }
      },
      "ContentDisposition" : {
        "type" : "object",
        "properties" : {
          "attachment" : {
            "type" : "boolean"
          },
          "charset" : {
            "type" : "string"
          },
          "creationDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "filename" : {
            "type" : "string"
          },
          "formData" : {
            "type" : "boolean"
          },
          "inline" : {
            "type" : "boolean"
          },
          "modificationDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "name" : {
            "type" : "string"
          },
          "readDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "size" : {
            "type" : "integer",
            "format" : "int64"
          },
          "type" : {
            "type" : "string"
          }
        }
      },
      "CountryNameType" : {
        "type" : "object",
        "properties" : {
          "code" : {
            "type" : "string",
            "xml" : {
              "name" : "Code",
              "attribute" : true
            }
          },
          "value" : {
            "type" : "string"
          }
        }
      },
      "CreateAirSegmentPayload" : {
        "required" : [ "airline", "destination", "origin" ],
        "type" : "object",
        "properties" : {
          "airline" : {
            "type" : "string"
          },
          "allowUserEdit" : {
            "type" : "boolean"
          },
          "cardId" : {
            "type" : "string"
          },
          "companyField" : {
            "$ref" : "#/components/schemas/TypeValueDto"
          },
          "companyFields" : {
            "uniqueItems" : true,
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/TypeValueDto"
            }
          },
          "companyId" : {
            "type" : "string"
          },
          "cost" : {
            "type" : "number"
          },
          "dateFrom" : {
            "type" : "string",
            "format" : "date-time"
          },
          "dateTo" : {
            "type" : "string",
            "format" : "date-time"
          },
          "destination" : {
            "type" : "string"
          },
          "fareType" : {
            "type" : "string"
          },
          "flightNumber" : {
            "type" : "string"
          },
          "notes" : {
            "type" : "string"
          },
          "origin" : {
            "type" : "string"
          },
          "passengers" : {
            "uniqueItems" : true,
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/PassengerDto"
            }
          },
          "quoteId" : {
            "type" : "string"
          },
          "reloc" : {
            "type" : "string"
          },
          "segmentId" : {
            "type" : "string"
          },
          "siteId" : {
            "type" : "string"
          },
          "travelApprovalId" : {
            "type" : "string"
          },
          "travelEventId" : {
            "type" : "string"
          }
        }
      },
      "CreateCarSegmentPayload" : {
        "type" : "object",
        "properties" : {
          "allowUserEdit" : {
            "type" : "boolean"
          },
          "car" : {
            "type" : "string"
          },
          "companyField" : {
            "$ref" : "#/components/schemas/TypeValueDto"
          },
          "companyFields" : {
            "uniqueItems" : true,
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/TypeValueDto"
            }
          },
          "companyId" : {
            "type" : "string"
          },
          "cost" : {
            "type" : "number"
          },
          "dateFrom" : {
            "type" : "string",
            "format" : "date-time"
          },
          "dateTo" : {
            "type" : "string",
            "format" : "date-time"
          },
          "destination" : {
            "type" : "string"
          },
          "hireCompany" : {
            "type" : "string"
          },
          "notes" : {
            "type" : "string"
          },
          "origin" : {
            "type" : "string"
          },
          "passengers" : {
            "uniqueItems" : true,
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/PassengerDto"
            }
          },
          "quoteId" : {
            "type" : "string"
          },
          "reloc" : {
            "type" : "string"
          },
          "segmentId" : {
            "type" : "string"
          },
          "siteId" : {
            "type" : "string"
          },
          "travelApprovalId" : {
            "type" : "string"
          },
          "travelEventId" : {
            "type" : "string"
          },
          "voucherNumber" : {
            "type" : "string"
          }
        }
      },
      "CreateGroupPayload" : {
        "type" : "object",
        "properties" : {
          "name" : {
            "type" : "string"
          }
        }
      },
      "CreateHotelSegmentPayload" : {
        "type" : "object",
        "properties" : {
          "allowUserEdit" : {
            "type" : "boolean"
          },
          "companyField" : {
            "$ref" : "#/components/schemas/TypeValueDto"
          },
          "companyFields" : {
            "uniqueItems" : true,
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/TypeValueDto"
            }
          },
          "companyId" : {
            "type" : "string"
          },
          "cost" : {
            "type" : "number"
          },
          "dateFrom" : {
            "type" : "string",
            "format" : "date-time"
          },
          "dateTo" : {
            "type" : "string",
            "format" : "date-time"
          },
          "destination" : {
            "type" : "string"
          },
          "hotelAddress" : {
            "type" : "string"
          },
          "hotelName" : {
            "type" : "string"
          },
          "hotelPhone" : {
            "type" : "string"
          },
          "notes" : {
            "type" : "string"
          },
          "passengers" : {
            "uniqueItems" : true,
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/PassengerDto"
            }
          },
          "quoteId" : {
            "type" : "string"
          },
          "reloc" : {
            "type" : "string"
          },
          "roomType" : {
            "type" : "string"
          },
          "segmentId" : {
            "type" : "string"
          },
          "siteId" : {
            "type" : "string"
          },
          "travelApprovalId" : {
            "type" : "string"
          },
          "travelEventId" : {
            "type" : "string"
          },
          "voucherNumber" : {
            "type" : "string"
          }
        }
      },
      "CreateOtherSegmentPayload" : {
        "type" : "object",
        "properties" : {
          "allowUserEdit" : {
            "type" : "boolean"
          },
          "companyField" : {
            "$ref" : "#/components/schemas/TypeValueDto"
          },
          "companyFields" : {
            "uniqueItems" : true,
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/TypeValueDto"
            }
          },
          "companyId" : {
            "type" : "string"
          },
          "cost" : {
            "type" : "number"
          },
          "dateFrom" : {
            "type" : "string",
            "format" : "date-time"
          },
          "dateTo" : {
            "type" : "string",
            "format" : "date-time"
          },
          "destination" : {
            "type" : "string"
          },
          "notes" : {
            "type" : "string"
          },
          "origin" : {
            "type" : "string"
          },
          "otherType" : {
            "type" : "string"
          },
          "passengers" : {
            "uniqueItems" : true,
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/PassengerDto"
            }
          },
          "quoteId" : {
            "type" : "string"
          },
          "reloc" : {
            "type" : "string"
          },
          "segmentId" : {
            "type" : "string"
          },
          "siteId" : {
            "type" : "string"
          },
          "travelApprovalId" : {
            "type" : "string"
          },
          "travelEventId" : {
            "type" : "string"
          },
          "type" : {
            "type" : "string"
          }
        }
      },
      "CreditCardDto" : {
        "type" : "object",
        "properties" : {
          "active" : {
            "type" : "boolean"
          },
          "address" : {
            "$ref" : "#/components/schemas/AddressDto"
          },
          "cardlabel" : {
            "type" : "string"
          },
          "cardloyalty" : {
            "type" : "string"
          },
          "cardloyaltydescription" : {
            "type" : "string"
          },
          "cardloyaltytype" : {
            "type" : "string"
          },
          "cardnumber" : {
            "type" : "string"
          },
          "cardtype" : {
            "type" : "string"
          },
          "currencycode" : {
            "type" : "string"
          },
          "errorDto" : {
            "$ref" : "#/components/schemas/CreditCardDto"
          },
          "erroroccured" : {
            "type" : "boolean"
          },
          "expired" : {
            "type" : "boolean"
          },
          "expiremonth" : {
            "type" : "string"
          },
          "expireyear" : {
            "type" : "string"
          },
          "id" : {
            "type" : "string"
          },
          "maxlimit" : {
            "type" : "number"
          },
          "nameoncard" : {
            "type" : "string"
          }
        }
      },
      "CreditCardTypeDto" : {
        "type" : "object",
        "properties" : {
          "currency" : {
            "type" : "string"
          },
          "name" : {
            "type" : "string"
          },
          "value" : {
            "type" : "string"
          }
        }
      },
      "DTO" : {
        "type" : "object",
        "properties" : {
          "errorDto" : {
            "$ref" : "#/components/schemas/DTO"
          },
          "erroroccured" : {
            "type" : "boolean"
          }
        }
      },
      "EnumPayload" : {
        "required" : [ "code", "label", "value" ],
        "type" : "object",
        "properties" : {
          "code" : {
            "type" : "string"
          },
          "label" : {
            "type" : "string"
          },
          "value" : {
            "type" : "string"
          }
        }
      },
      "FareDto" : {
        "type" : "object",
        "properties" : {
          "amount" : {
            "type" : "number"
          },
          "connectionkey" : {
            "type" : "string"
          },
          "errorDto" : {
            "$ref" : "#/components/schemas/DTO"
          },
          "erroroccured" : {
            "type" : "boolean"
          },
          "farePriceCateory" : {
            "type" : "string"
          },
          "fareinfoid" : {
            "type" : "string"
          },
          "fareinfonoluggage" : {
            "type" : "boolean"
          },
          "farename" : {
            "type" : "string"
          },
          "faretype" : {
            "type" : "string"
          },
          "inpolicy" : {
            "type" : "boolean"
          }
        }
      },
      "FareRuleBaggageSSRDisplayEvent" : {
        "type" : "object",
        "properties" : {
          "cost" : {
            "type" : "number"
          },
          "display" : {
            "type" : "string"
          },
          "name" : {
            "type" : "string"
          },
          "value" : {
            "type" : "string"
          },
          "weight" : {
            "type" : "number"
          },
          "weightType" : {
            "type" : "string"
          }
        }
      },
      "FareRuleBaggageSSREvent" : {
        "type" : "object",
        "properties" : {
          "active" : {
            "type" : "boolean"
          },
          "airlineCode" : {
            "type" : "string"
          },
          "baggageType" : {
            "type" : "string"
          },
          "cost" : {
            "type" : "number"
          },
          "description" : {
            "type" : "string"
          },
          "free" : {
            "type" : "boolean"
          },
          "id" : {
            "type" : "string"
          },
          "name" : {
            "type" : "string"
          },
          "ssrCode" : {
            "type" : "string"
          },
          "weight" : {
            "type" : "number"
          }
        }
      },
      "FareRuleSSREvent" : {
        "type" : "object",
        "properties" : {
          "active" : {
            "type" : "boolean"
          },
          "airlineCode" : {
            "type" : "string"
          },
          "baggageType" : {
            "type" : "string"
          },
          "cost" : {
            "type" : "number"
          },
          "description" : {
            "type" : "string"
          },
          "flightNumber" : {
            "type" : "string"
          },
          "free" : {
            "type" : "boolean"
          },
          "id" : {
            "type" : "string"
          },
          "name" : {
            "type" : "string"
          },
          "passengerNum" : {
            "type" : "integer",
            "format" : "int32"
          },
          "passengerType" : {
            "type" : "string"
          },
          "seatType" : {
            "type" : "string"
          },
          "ssrCode" : {
            "type" : "string"
          },
          "weight" : {
            "type" : "number"
          }
        }
      },
      "FareRuleSeatSSRDto" : {
        "type" : "object",
        "properties" : {
          "priceCurrency" : {
            "type" : "string"
          },
          "type" : {
            "type" : "string"
          },
          "typeName" : {
            "type" : "string"
          }
        }
      },
      "FlightDto" : {
        "type" : "object",
        "properties" : {
          "airline" : {
            "type" : "string"
          },
          "arrivedate" : {
            "pattern" : "yyyy-MM-dd",
            "type" : "string",
            "format" : "date-time"
          },
          "arrivetime" : {
            "type" : "string"
          },
          "departdate" : {
            "pattern" : "yyyy-MM-dd",
            "type" : "string",
            "format" : "date-time"
          },
          "departtime" : {
            "type" : "string"
          },
          "endpoint" : {
            "type" : "string"
          },
          "endpointname" : {
            "type" : "string"
          },
          "errorDto" : {
            "$ref" : "#/components/schemas/DTO"
          },
          "erroroccured" : {
            "type" : "boolean"
          },
          "number" : {
            "type" : "string"
          },
          "startpoint" : {
            "type" : "string"
          },
          "startpointname" : {
            "type" : "string"
          }
        }
      },
      "FlightFareRuleEvent" : {
        "type" : "object",
        "properties" : {
          "airline" : {
            "type" : "string"
          },
          "airlineName" : {
            "type" : "string"
          },
          "fareName" : {
            "type" : "string"
          },
          "flightNumber" : {
            "type" : "string"
          },
          "from" : {
            "type" : "string"
          },
          "fromDate" : {
            "type" : "string"
          },
          "fromTime" : {
            "type" : "string"
          },
          "to" : {
            "type" : "string"
          },
          "toDate" : {
            "type" : "string"
          },
          "toTime" : {
            "type" : "string"
          }
        }
      },
      "FlightResultDto" : {
        "type" : "object",
        "properties" : {
          "empty" : {
            "type" : "boolean"
          },
          "fare" : {
            "$ref" : "#/components/schemas/FareDto"
          },
          "flights" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/FlightDto"
            }
          }
        }
      },
      "FrequentFlyerDetailDto" : {
        "type" : "object",
        "properties" : {
          "outJourney" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/LoyaltySchemeDto"
            }
          },
          "returnJourney" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/LoyaltySchemeDto"
            }
          }
        }
      },
      "GroupDto" : {
        "type" : "object",
        "properties" : {
          "companies" : {
            "uniqueItems" : true,
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/CompanyDto"
            }
          },
          "id" : {
            "type" : "integer",
            "format" : "int64"
          },
          "name" : {
            "type" : "string"
          }
        }
      },
      "HeaderBeanImpl" : {
        "type" : "object",
        "properties" : {
          "apiVersion" : {
            "type" : "integer",
            "format" : "int32"
          },
          "appType" : {
            "type" : "string"
          },
          "appVersion" : {
            "type" : "string"
          },
          "bypassDeviceCheck" : {
            "type" : "boolean"
          },
          "clientPlatform" : {
            "type" : "string"
          },
          "connectionType" : {
            "type" : "string"
          },
          "currencyCode" : {
            "type" : "string"
          },
          "detailOnly" : {
            "type" : "boolean"
          },
          "deviceId" : {
            "type" : "string"
          },
          "deviceLat" : {
            "type" : "number",
            "format" : "double"
          },
          "deviceLng" : {
            "type" : "number",
            "format" : "double"
          },
          "deviceName" : {
            "type" : "string"
          },
          "devicePhone" : {
            "type" : "string"
          },
          "etag" : {
            "type" : "string"
          },
          "externalSiteId" : {
            "type" : "string"
          },
          "fullPath" : {
            "type" : "string"
          },
          "phoneModel" : {
            "type" : "string"
          },
          "phoneOS" : {
            "type" : "string"
          },
          "phoneOSVersion" : {
            "type" : "string"
          },
          "referrer" : {
            "type" : "string"
          },
          "remoteAddress" : {
            "type" : "string"
          },
          "searchIp" : {
            "type" : "string"
          },
          "sessionId" : {
            "type" : "string"
          },
          "siteInterface" : {
            "type" : "string"
          },
          "url" : {
            "type" : "string"
          },
          "userAgent" : {
            "type" : "string"
          }
        }
      },
      "HttpRange" : {
        "type" : "object"
      },
      "IAmount" : {
        "type" : "object",
        "properties" : {
          "amount" : {
            "type" : "number"
          },
          "currency" : {
            "type" : "string"
          },
          "currencyMinorUnit" : {
            "type" : "integer",
            "format" : "int32"
          },
          "name" : {
            "type" : "string"
          }
        }
      },
      "IOption" : {
        "type" : "object",
        "properties" : {
          "amount" : {
            "$ref" : "#/components/schemas/IAmount"
          },
          "choice" : {
            "$ref" : "#/components/schemas/IPricedChoice"
          },
          "code" : {
            "type" : "string"
          },
          "name" : {
            "type" : "string"
          },
          "options" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "pricedChoices" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/IPricedChoice"
            }
          },
          "value" : {
            "type" : "string"
          }
        }
      },
      "IPricedChoice" : {
        "type" : "object",
        "properties" : {
          "amount" : {
            "$ref" : "#/components/schemas/IAmount"
          },
          "code" : {
            "type" : "string"
          },
          "description" : {
            "type" : "string"
          }
        }
      },
      "IdNameDto" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string"
          },
          "name" : {
            "type" : "string"
          }
        }
      },
      "IdNameTypeDto" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string"
          },
          "name" : {
            "type" : "string"
          },
          "type" : {
            "type" : "string"
          }
        }
      },
      "IdNameValueDto" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string"
          },
          "name" : {
            "type" : "string"
          },
          "value" : {
            "type" : "string"
          }
        }
      },
      "JSON" : {
        "type" : "object",
        "properties" : {
          "array" : {
            "type" : "boolean"
          },
          "empty" : {
            "type" : "boolean"
          }
        }
      },
      "JourneyDetailDto" : {
        "type" : "object",
        "properties" : {
          "carryBaggage" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/FareRuleBaggageSSREvent"
            }
          },
          "carryOn" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/FareRuleBaggageSSRDisplayEvent"
            }
          },
          "checkedBaggage" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/FareRuleBaggageSSREvent"
            }
          },
          "checkedOn" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/FareRuleBaggageSSRDisplayEvent"
            }
          },
          "flight" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/FlightFareRuleEvent"
            }
          },
          "seatDetail" : {
            "$ref" : "#/components/schemas/SeatDetailDto"
          },
          "seatKey" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/FareRuleSeatSSRDto"
            }
          },
          "signature" : {
            "type" : "string"
          }
        }
      },
      "JourneyResultDto" : {
        "type" : "object",
        "properties" : {
          "duration" : {
            "type" : "string"
          },
          "durationmins" : {
            "type" : "integer",
            "format" : "int32"
          },
          "fares" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/FareDto"
            }
          },
          "flights" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/FlightDto"
            }
          },
          "ispreferred" : {
            "type" : "boolean"
          },
          "lowPrice" : {
            "$ref" : "#/components/schemas/FareDto"
          }
        }
      },
      "LinkPayload" : {
        "required" : [ "message", "targetUsername" ],
        "type" : "object",
        "properties" : {
          "message" : {
            "type" : "string"
          },
          "targetUsername" : {
            "type" : "string"
          }
        }
      },
      "LoadHotelPayload" : {
        "required" : [ "chainCode", "fromDate", "hotelCode" ],
        "type" : "object",
        "properties" : {
          "chainCode" : {
            "type" : "string"
          },
          "fromDate" : {
            "pattern" : "yyyy-MM-dd",
            "type" : "string",
            "format" : "date-time"
          },
          "hotelCode" : {
            "type" : "string"
          },
          "toDate" : {
            "pattern" : "yyyy-MM-dd",
            "type" : "string",
            "format" : "date-time"
          }
        }
      },
      "LoginPayload" : {
        "required" : [ "password", "username" ],
        "type" : "object",
        "properties" : {
          "password" : {
            "type" : "string"
          },
          "username" : {
            "type" : "string"
          }
        }
      },
      "LoyaltyAccountDto" : {
        "type" : "object",
        "properties" : {
          "company" : {
            "type" : "string"
          },
          "companyName" : {
            "type" : "string"
          },
          "id" : {
            "type" : "string"
          },
          "number" : {
            "type" : "string"
          },
          "schemeId" : {
            "type" : "string"
          },
          "type" : {
            "type" : "string"
          }
        }
      },
      "LoyaltySchemeDto" : {
        "type" : "object",
        "properties" : {
          "alliance" : {
            "type" : "string"
          },
          "code" : {
            "type" : "string"
          },
          "description" : {
            "type" : "string"
          },
          "id" : {
            "type" : "string"
          },
          "loyaltyType" : {
            "type" : "string"
          }
        }
      },
      "MediaType" : {
        "type" : "object",
        "properties" : {
          "charset" : {
            "type" : "string"
          },
          "concrete" : {
            "type" : "boolean"
          },
          "parameters" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "string"
            }
          },
          "qualityValue" : {
            "type" : "number",
            "format" : "double"
          },
          "subtype" : {
            "type" : "string"
          },
          "subtypeSuffix" : {
            "type" : "string"
          },
          "type" : {
            "type" : "string"
          },
          "wildcardSubtype" : {
            "type" : "boolean"
          },
          "wildcardType" : {
            "type" : "boolean"
          }
        }
      },
      "MessageContentPayload" : {
        "type" : "object",
        "properties" : {
          "contentType" : {
            "type" : "string",
            "enum" : [ "Text", "Image", "URL", "ListItem" ]
          },
          "image" : {
            "type" : "boolean"
          },
          "text" : {
            "type" : "boolean"
          },
          "value" : {
            "type" : "string"
          }
        }
      },
      "MessagePayload" : {
        "type" : "object",
        "properties" : {
          "allImages" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "completeParagraph" : {
            "type" : "string"
          },
          "sections" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/MessageSectionPayload"
            }
          },
          "title" : {
            "type" : "string"
          }
        }
      },
      "MessageSectionPayload" : {
        "type" : "object",
        "properties" : {
          "allImages" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "completeParagraph" : {
            "type" : "string"
          },
          "sectionTitle" : {
            "type" : "string"
          },
          "subSections" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/MessageSubSectionPayload"
            }
          }
        }
      },
      "MessageSubSectionPayload" : {
        "type" : "object",
        "properties" : {
          "contents" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/MessageContentPayload"
            }
          }
        }
      },
      "NameEmailDto" : {
        "type" : "object",
        "properties" : {
          "email" : {
            "type" : "string"
          },
          "name" : {
            "type" : "string"
          }
        }
      },
      "OptionObject" : {
        "type" : "object",
        "properties" : {
          "data" : {
            "type" : "object"
          },
          "isgroup" : {
            "type" : "boolean"
          },
          "name" : {
            "type" : "string"
          },
          "selected" : {
            "type" : "boolean"
          },
          "value" : {
            "type" : "string"
          }
        }
      },
      "OptionValidTypeDto" : {
        "type" : "object",
        "properties" : {
          "data" : {
            "$ref" : "#/components/schemas/ValidTypeDto"
          },
          "isgroup" : {
            "type" : "boolean"
          },
          "name" : {
            "type" : "string"
          },
          "selected" : {
            "type" : "boolean"
          },
          "value" : {
            "type" : "string"
          }
        }
      },
      "PassengerDto" : {
        "required" : [ "familyName", "givenName" ],
        "type" : "object",
        "properties" : {
          "familyName" : {
            "type" : "string"
          },
          "givenName" : {
            "type" : "string"
          },
          "id" : {
            "type" : "string"
          },
          "title" : {
            "type" : "string",
            "enum" : [ "Ms", "Miss", "Mrs", "Mr", "Master", "Rev", "Fr", "Dr", "Atty", "Prof", "Hon", "Pres", "Gov", "Coach", "Ofc", "Msgr", "Sr", "Br", "Supt", "Rep", "Sen", "Amb", "Treas", "Sec", "Pvt", "Cpl", "Sgt", "Adm", "Maj", "Capt", "Cmdr", "Lt", "Lt Col", "Col", "Gen" ]
          }
        }
      },
      "PassengerSSRDto" : {
        "type" : "object",
        "properties" : {
          "baggageCarry" : {
            "type" : "string"
          },
          "baggageCheck" : {
            "type" : "string"
          },
          "journeyType" : {
            "type" : "string"
          },
          "passengerNum" : {
            "type" : "integer",
            "format" : "int32"
          },
          "passengerType" : {
            "type" : "string"
          },
          "passengerTypeEnum" : {
            "type" : "string"
          },
          "seat" : {
            "type" : "string"
          }
        }
      },
      "PaxDTO" : {
        "required" : [ "ageGroup", "birthDate", "expireDate", "issueDate" ],
        "type" : "object",
        "properties" : {
          "ageGroup" : {
            "type" : "string",
            "default" : "ADULT",
            "enum" : [ "ADULT", "CHILD", "INFANT" ]
          },
          "birthDate" : {
            "pattern" : "yyyy-MM-dd",
            "type" : "string",
            "description" : "Date of birth"
          },
          "expireDate" : {
            "pattern" : "yyyy-MM-dd",
            "type" : "string",
            "description" : "Expire Date"
          },
          "familyName" : {
            "pattern" : "^[a-zA-Z ]+$",
            "type" : "string",
            "description" : "Family name"
          },
          "frequentFlyerAirline" : {
            "type" : "string",
            "description" : "Frequent flyer airline"
          },
          "frequentFlyerId" : {
            "type" : "integer",
            "description" : "Frequent flyer ID",
            "format" : "int64"
          },
          "frequentFlyerNumber" : {
            "type" : "string",
            "description" : "Frequent flyer number"
          },
          "gender" : {
            "type" : "string",
            "description" : "Gender"
          },
          "givenName" : {
            "pattern" : "^[a-zA-Z ]+$",
            "type" : "string",
            "description" : "Given name"
          },
          "issueDate" : {
            "pattern" : "yyyy-MM-dd",
            "type" : "string",
            "description" : "Issue Date"
          },
          "meal" : {
            "type" : "string",
            "description" : "Meal"
          },
          "passengerNum" : {
            "type" : "integer",
            "description" : "Passenger number",
            "format" : "int32"
          },
          "passportId" : {
            "type" : "string",
            "description" : "Passport ID"
          },
          "passportNumber" : {
            "type" : "string",
            "description" : "Passport number"
          },
          "returnFrequentFlyerAirline" : {
            "type" : "string",
            "description" : "Return frequent flyer airline"
          },
          "returnFrequentFlyerId" : {
            "type" : "integer",
            "description" : "Return frequent flyer ID",
            "format" : "int64"
          },
          "returnFrequentFlyerNumber" : {
            "type" : "string",
            "description" : "Return frequent flyer number"
          },
          "socialMediaKeys" : {
            "type" : "string",
            "description" : "Social media key"
          },
          "socialMediaType" : {
            "type" : "string",
            "description" : "Social media type"
          },
          "title" : {
            "type" : "string",
            "description" : "Title"
          },
          "travellerId" : {
            "type" : "string",
            "description" : "Traveller person id"
          }
        }
      },
      "PhoneDto" : {
        "required" : [ "countryCode", "phone" ],
        "type" : "object",
        "properties" : {
          "areaCode" : {
            "type" : "string"
          },
          "countryCode" : {
            "pattern" : "^\\d{1,3}$",
            "type" : "string",
            "description" : "Country code of the user",
            "example" : "61"
          },
          "phone" : {
            "pattern" : "^\\d{1,12}$",
            "type" : "string",
            "description" : "Phone number of the user",
            "example" : "0452765876"
          },
          "phoneFormatted" : {
            "type" : "string"
          }
        }
      },
      "PolicyDto" : {
        "type" : "object",
        "properties" : {
          "amount" : {
            "type" : "number"
          },
          "mins" : {
            "type" : "integer",
            "format" : "int32"
          },
          "policyId" : {
            "type" : "string"
          }
        }
      },
      "ProfileCompanyDto" : {
        "type" : "object",
        "properties" : {
          "active" : {
            "type" : "boolean"
          },
          "address" : {
            "$ref" : "#/components/schemas/AddressDto"
          },
          "allowAccess" : {
            "type" : "string"
          },
          "company" : {
            "$ref" : "#/components/schemas/CompanyDto"
          },
          "creationDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "data" : {
            "$ref" : "#/components/schemas/BuildCompanyPayload"
          },
          "id" : {
            "type" : "string"
          },
          "modificationDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "profileAccess" : {
            "type" : "string"
          },
          "shared" : {
            "type" : "boolean"
          }
        }
      },
      "ProfileDetailedDto" : {
        "required" : [ "id" ],
        "type" : "object",
        "properties" : {
          "address" : {
            "$ref" : "#/components/schemas/AddressDto"
          },
          "airLoyalty" : {
            "uniqueItems" : true,
            "type" : "array",
            "description" : "Returns all airlines related to the frequent flyer's associated with the session profile..",
            "items" : {
              "$ref" : "#/components/schemas/LoyaltySchemeDto"
            }
          },
          "birthDate" : {
            "pattern" : "yyyy-MM-dd",
            "type" : "string",
            "description" : "Birthdate of the user",
            "format" : "date-time",
            "x-ui-element" : "datepicker"
          },
          "bookingFee" : {
            "$ref" : "#/components/schemas/IdNameTypeDto"
          },
          "carLoyalty" : {
            "uniqueItems" : true,
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/LoyaltySchemeDto"
            }
          },
          "companies" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/BareCompanyDto"
            }
          },
          "credits" : {
            "uniqueItems" : true,
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/CodeNameAmount"
            }
          },
          "email" : {
            "pattern" : "^[\\w-\\.]+@([\\w-]+\\.)+[\\w-]{2,4}$",
            "type" : "string",
            "description" : "Email of the user",
            "example" : "tom@gmail.com",
            "x-ui-element" : "textfield"
          },
          "familyName" : {
            "maxLength" : 64,
            "minLength" : 1,
            "pattern" : "^(?![' -]|.*[' -]$)[A-Za-z\\- ']{1,64}$",
            "type" : "string",
            "description" : "Family name of the user",
            "example" : "Hanks",
            "x-ui-element" : "textfield"
          },
          "gender" : {
            "maxLength" : 2,
            "minLength" : 1,
            "type" : "string",
            "description" : "Gender of the user",
            "example" : "M",
            "enum" : [ "Male", "F", "X", "N" ],
            "x-enum-description" : "M:Male,F:Female,X:Non-binary,NS:Not Supplied",
            "x-ui-element" : "single select"
          },
          "givenName" : {
            "maxLength" : 64,
            "minLength" : 1,
            "pattern" : "^(?![' -]|.*[' -]$)[A-Za-z\\- ']{1,64}$",
            "type" : "string",
            "description" : "Given name of the user",
            "example" : "Tom",
            "x-ui-element" : "textfield"
          },
          "hasApprover" : {
            "type" : "boolean",
            "description" : "Whether the User has a Approver",
            "example" : false
          },
          "hasArrangeTravellers" : {
            "type" : "boolean",
            "description" : "Whether the User has arranged travellers",
            "example" : false
          },
          "hasCompany" : {
            "type" : "boolean",
            "description" : "Whether the User has a company",
            "example" : false
          },
          "hasManagedCompany" : {
            "type" : "boolean",
            "description" : "Whether the User has a managed company",
            "example" : false
          },
          "hotelLoyalty" : {
            "uniqueItems" : true,
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/LoyaltySchemeDto"
            }
          },
          "id" : {
            "type" : "string",
            "description" : "Unique id of the user",
            "example" : "81xJfFzmKpwhk5p1nrfOaQ%3D%3D"
          },
          "loyaltyAccounts" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/LoyaltyAccountDto"
            }
          },
          "mobilePhone" : {
            "$ref" : "#/components/schemas/PhoneDto"
          },
          "passengerNum" : {
            "type" : "integer",
            "description" : "Passenger number",
            "format" : "int32",
            "example" : 0
          },
          "passports" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/TravelDocumentDto"
            }
          },
          "personType" : {
            "type" : "string"
          },
          "phone" : {
            "$ref" : "#/components/schemas/PhoneDto"
          },
          "privateTraveller" : {
            "type" : "boolean",
            "description" : "Whether the User is a private traveller",
            "example" : false
          },
          "settings" : {
            "uniqueItems" : true,
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/IdNameValueDto"
            }
          },
          "title" : {
            "maxLength" : 5,
            "minLength" : 2,
            "type" : "string",
            "description" : "Salutation of the user",
            "example" : "Mr",
            "enum" : [ "Mr", "Mrs", "Ms", "Dr" ],
            "x-ui-element" : "single select"
          },
          "vip" : {
            "type" : "boolean",
            "description" : "Whether the User is a privileged user",
            "example" : false
          }
        }
      },
      "ProfileDto" : {
        "required" : [ "id" ],
        "type" : "object",
        "properties" : {
          "address" : {
            "$ref" : "#/components/schemas/AddressDto"
          },
          "birthDate" : {
            "pattern" : "yyyy-MM-dd",
            "type" : "string",
            "description" : "Birthdate of the user",
            "format" : "date-time",
            "x-ui-element" : "datepicker"
          },
          "companies" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/BareCompanyDto"
            }
          },
          "email" : {
            "pattern" : "^[\\w-\\.]+@([\\w-]+\\.)+[\\w-]{2,4}$",
            "type" : "string",
            "description" : "Email of the user",
            "example" : "tom@gmail.com",
            "x-ui-element" : "textfield"
          },
          "familyName" : {
            "maxLength" : 64,
            "minLength" : 1,
            "pattern" : "^(?![' -]|.*[' -]$)[A-Za-z\\- ']{1,64}$",
            "type" : "string",
            "description" : "Family name of the user",
            "example" : "Hanks",
            "x-ui-element" : "textfield"
          },
          "gender" : {
            "maxLength" : 2,
            "minLength" : 1,
            "type" : "string",
            "description" : "Gender of the user",
            "example" : "M",
            "enum" : [ "Male", "F", "X", "N" ],
            "x-enum-description" : "M:Male,F:Female,X:Non-binary,NS:Not Supplied",
            "x-ui-element" : "single select"
          },
          "givenName" : {
            "maxLength" : 64,
            "minLength" : 1,
            "pattern" : "^(?![' -]|.*[' -]$)[A-Za-z\\- ']{1,64}$",
            "type" : "string",
            "description" : "Given name of the user",
            "example" : "Tom",
            "x-ui-element" : "textfield"
          },
          "hasApprover" : {
            "type" : "boolean",
            "description" : "Whether the User has a Approver",
            "example" : false
          },
          "hasArrangeTravellers" : {
            "type" : "boolean",
            "description" : "Whether the User has arranged travellers",
            "example" : false
          },
          "hasCompany" : {
            "type" : "boolean",
            "description" : "Whether the User has a company",
            "example" : false
          },
          "hasManagedCompany" : {
            "type" : "boolean",
            "description" : "Whether the User has a managed company",
            "example" : false
          },
          "id" : {
            "type" : "string",
            "description" : "Unique id of the user",
            "example" : "81xJfFzmKpwhk5p1nrfOaQ%3D%3D"
          },
          "loyaltyAccounts" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/LoyaltyAccountDto"
            }
          },
          "mobilePhone" : {
            "$ref" : "#/components/schemas/PhoneDto"
          },
          "passengerNum" : {
            "type" : "integer",
            "description" : "Passenger number",
            "format" : "int32",
            "example" : 0
          },
          "passports" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/TravelDocumentDto"
            }
          },
          "personType" : {
            "type" : "string"
          },
          "phone" : {
            "$ref" : "#/components/schemas/PhoneDto"
          },
          "privateTraveller" : {
            "type" : "boolean",
            "description" : "Whether the User is a private traveller",
            "example" : false
          },
          "title" : {
            "maxLength" : 5,
            "minLength" : 2,
            "type" : "string",
            "description" : "Salutation of the user",
            "example" : "Mr",
            "enum" : [ "Mr", "Mrs", "Ms", "Dr" ],
            "x-ui-element" : "single select"
          },
          "vip" : {
            "type" : "boolean",
            "description" : "Whether the User is a privileged user",
            "example" : false
          }
        }
      },
      "ProfileMemberDto" : {
        "type" : "object",
        "properties" : {
          "active" : {
            "type" : "boolean"
          },
          "display" : {
            "type" : "string"
          },
          "id" : {
            "type" : "string"
          }
        }
      },
      "ReceiverType" : {
        "required" : [ "serverID" ],
        "type" : "object",
        "properties" : {
          "serverID" : {
            "type" : "string",
            "xml" : {
              "name" : "ServerID"
            }
          }
        }
      },
      "RegistrationPayload" : {
        "required" : [ "password" ],
        "type" : "object",
        "properties" : {
          "password" : {
            "maxLength" : 2147483647,
            "minLength" : 8,
            "pattern" : "^(?=.*[a-zA-Z])(?=.*[0-9])(?=.*[!,.#$%^&*()\"';:\\[\\]])(?!.*@).+$",
            "type" : "string"
          },
          "profile" : {
            "$ref" : "#/components/schemas/ProfileDto"
          }
        }
      },
      "RequiredOptionsDto" : {
        "type" : "object",
        "properties" : {
          "options" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "required" : {
            "type" : "boolean"
          }
        }
      },
      "ResponseEntitySTSearchAirResponse" : {
        "type" : "object",
        "properties" : {
          "body" : {
            "$ref" : "#/components/schemas/STSearchAirResponse"
          },
          "headers" : {
            "type" : "object",
            "properties" : {
              "accept" : {
                "type" : "array",
                "items" : {
                  "$ref" : "#/components/schemas/MediaType"
                }
              },
              "acceptCharset" : {
                "type" : "array",
                "items" : {
                  "type" : "string"
                }
              },
              "acceptLanguage" : {
                "type" : "array",
                "items" : {
                  "type" : "object",
                  "properties" : {
                    "range" : {
                      "type" : "string"
                    },
                    "weight" : {
                      "type" : "number",
                      "format" : "double"
                    }
                  }
                }
              },
              "acceptLanguageAsLocales" : {
                "type" : "array",
                "items" : {
                  "type" : "object",
                  "properties" : {
                    "country" : {
                      "type" : "string"
                    },
                    "displayCountry" : {
                      "type" : "string"
                    },
                    "displayLanguage" : {
                      "type" : "string"
                    },
                    "displayName" : {
                      "type" : "string"
                    },
                    "displayScript" : {
                      "type" : "string"
                    },
                    "displayVariant" : {
                      "type" : "string"
                    },
                    "extensionKeys" : {
                      "uniqueItems" : true,
                      "type" : "array",
                      "items" : {
                        "type" : "string"
                      }
                    },
                    "iso3Country" : {
                      "type" : "string"
                    },
                    "iso3Language" : {
                      "type" : "string"
                    },
                    "language" : {
                      "type" : "string"
                    },
                    "script" : {
                      "type" : "string"
                    },
                    "unicodeLocaleAttributes" : {
                      "uniqueItems" : true,
                      "type" : "array",
                      "items" : {
                        "type" : "string"
                      }
                    },
                    "unicodeLocaleKeys" : {
                      "uniqueItems" : true,
                      "type" : "array",
                      "items" : {
                        "type" : "string"
                      }
                    },
                    "variant" : {
                      "type" : "string"
                    }
                  }
                }
              },
              "acceptPatch" : {
                "type" : "array",
                "items" : {
                  "$ref" : "#/components/schemas/MediaType"
                }
              },
              "accessControlAllowCredentials" : {
                "type" : "boolean"
              },
              "accessControlAllowHeaders" : {
                "type" : "array",
                "items" : {
                  "type" : "string"
                }
              },
              "accessControlAllowMethods" : {
                "type" : "array",
                "items" : {
                  "type" : "string",
                  "enum" : [ "GET", "HEAD", "POST", "PUT", "PATCH", "DELETE", "OPTIONS", "TRACE" ]
                }
              },
              "accessControlAllowOrigin" : {
                "type" : "string"
              },
              "accessControlExposeHeaders" : {
                "type" : "array",
                "items" : {
                  "type" : "string"
                }
              },
              "accessControlMaxAge" : {
                "type" : "integer",
                "format" : "int64"
              },
              "accessControlRequestHeaders" : {
                "type" : "array",
                "items" : {
                  "type" : "string"
                }
              },
              "accessControlRequestMethod" : {
                "type" : "string",
                "enum" : [ "GET", "HEAD", "POST", "PUT", "PATCH", "DELETE", "OPTIONS", "TRACE" ]
              },
              "all" : {
                "type" : "object",
                "additionalProperties" : {
                  "type" : "string"
                },
                "writeOnly" : true
              },
              "allow" : {
                "uniqueItems" : true,
                "type" : "array",
                "items" : {
                  "type" : "string",
                  "enum" : [ "GET", "HEAD", "POST", "PUT", "PATCH", "DELETE", "OPTIONS", "TRACE" ]
                }
              },
              "basicAuth" : {
                "type" : "string",
                "writeOnly" : true
              },
              "bearerAuth" : {
                "type" : "string",
                "writeOnly" : true
              },
              "cacheControl" : {
                "type" : "string"
              },
              "connection" : {
                "type" : "array",
                "items" : {
                  "type" : "string"
                }
              },
              "contentDisposition" : {
                "$ref" : "#/components/schemas/ContentDisposition"
              },
              "contentLanguage" : {
                "type" : "object",
                "properties" : {
                  "country" : {
                    "type" : "string"
                  },
                  "displayCountry" : {
                    "type" : "string"
                  },
                  "displayLanguage" : {
                    "type" : "string"
                  },
                  "displayName" : {
                    "type" : "string"
                  },
                  "displayScript" : {
                    "type" : "string"
                  },
                  "displayVariant" : {
                    "type" : "string"
                  },
                  "extensionKeys" : {
                    "uniqueItems" : true,
                    "type" : "array",
                    "items" : {
                      "type" : "string"
                    }
                  },
                  "iso3Country" : {
                    "type" : "string"
                  },
                  "iso3Language" : {
                    "type" : "string"
                  },
                  "language" : {
                    "type" : "string"
                  },
                  "script" : {
                    "type" : "string"
                  },
                  "unicodeLocaleAttributes" : {
                    "uniqueItems" : true,
                    "type" : "array",
                    "items" : {
                      "type" : "string"
                    }
                  },
                  "unicodeLocaleKeys" : {
                    "uniqueItems" : true,
                    "type" : "array",
                    "items" : {
                      "type" : "string"
                    }
                  },
                  "variant" : {
                    "type" : "string"
                  }
                }
              },
              "contentLength" : {
                "type" : "integer",
                "format" : "int64"
              },
              "contentType" : {
                "$ref" : "#/components/schemas/MediaType"
              },
              "date" : {
                "type" : "integer",
                "format" : "int64"
              },
              "empty" : {
                "type" : "boolean"
              },
              "etag" : {
                "type" : "string"
              },
              "expires" : {
                "type" : "integer",
                "format" : "int64"
              },
              "host" : {
                "type" : "object",
                "properties" : {
                  "address" : {
                    "type" : "object",
                    "properties" : {
                      "address" : {
                        "type" : "array",
                        "items" : {
                          "type" : "string",
                          "format" : "byte"
                        }
                      },
                      "anyLocalAddress" : {
                        "type" : "boolean"
                      },
                      "canonicalHostName" : {
                        "type" : "string"
                      },
                      "hostAddress" : {
                        "type" : "string"
                      },
                      "hostName" : {
                        "type" : "string"
                      },
                      "linkLocalAddress" : {
                        "type" : "boolean"
                      },
                      "loopbackAddress" : {
                        "type" : "boolean"
                      },
                      "mcglobal" : {
                        "type" : "boolean"
                      },
                      "mclinkLocal" : {
                        "type" : "boolean"
                      },
                      "mcnodeLocal" : {
                        "type" : "boolean"
                      },
                      "mcorgLocal" : {
                        "type" : "boolean"
                      },
                      "mcsiteLocal" : {
                        "type" : "boolean"
                      },
                      "multicastAddress" : {
                        "type" : "boolean"
                      },
                      "siteLocalAddress" : {
                        "type" : "boolean"
                      }
                    }
                  },
                  "hostName" : {
                    "type" : "string"
                  },
                  "hostString" : {
                    "type" : "string"
                  },
                  "port" : {
                    "type" : "integer",
                    "format" : "int32"
                  },
                  "unresolved" : {
                    "type" : "boolean"
                  }
                }
              },
              "ifMatch" : {
                "type" : "array",
                "items" : {
                  "type" : "string"
                }
              },
              "ifModifiedSince" : {
                "type" : "integer",
                "format" : "int64"
              },
              "ifNoneMatch" : {
                "type" : "array",
                "items" : {
                  "type" : "string"
                }
              },
              "ifUnmodifiedSince" : {
                "type" : "integer",
                "format" : "int64"
              },
              "lastModified" : {
                "type" : "integer",
                "format" : "int64"
              },
              "location" : {
                "type" : "string",
                "format" : "uri"
              },
              "origin" : {
                "type" : "string"
              },
              "pragma" : {
                "type" : "string"
              },
              "range" : {
                "type" : "array",
                "items" : {
                  "$ref" : "#/components/schemas/HttpRange"
                }
              },
              "upgrade" : {
                "type" : "string"
              },
              "vary" : {
                "type" : "array",
                "items" : {
                  "type" : "string"
                }
              }
            },
            "additionalProperties" : {
              "type" : "array",
              "items" : {
                "type" : "string"
              }
            }
          },
          "statusCode" : {
            "type" : "string",
            "enum" : [ "100 CONTINUE", "101 SWITCHING_PROTOCOLS", "102 PROCESSING", "103 CHECKPOINT", "200 OK", "201 CREATED", "202 ACCEPTED", "203 NON_AUTHORITATIVE_INFORMATION", "204 NO_CONTENT", "205 RESET_CONTENT", "206 PARTIAL_CONTENT", "207 MULTI_STATUS", "208 ALREADY_REPORTED", "226 IM_USED", "300 MULTIPLE_CHOICES", "301 MOVED_PERMANENTLY", "302 FOUND", "302 MOVED_TEMPORARILY", "303 SEE_OTHER", "304 NOT_MODIFIED", "305 USE_PROXY", "307 TEMPORARY_REDIRECT", "308 PERMANENT_REDIRECT", "400 BAD_REQUEST", "401 UNAUTHORIZED", "402 PAYMENT_REQUIRED", "403 FORBIDDEN", "404 NOT_FOUND", "405 METHOD_NOT_ALLOWED", "406 NOT_ACCEPTABLE", "407 PROXY_AUTHENTICATION_REQUIRED", "408 REQUEST_TIMEOUT", "409 CONFLICT", "410 GONE", "411 LENGTH_REQUIRED", "412 PRECONDITION_FAILED", "413 PAYLOAD_TOO_LARGE", "413 REQUEST_ENTITY_TOO_LARGE", "414 URI_TOO_LONG", "414 REQUEST_URI_TOO_LONG", "415 UNSUPPORTED_MEDIA_TYPE", "416 REQUESTED_RANGE_NOT_SATISFIABLE", "417 EXPECTATION_FAILED", "418 I_AM_A_TEAPOT", "419 INSUFFICIENT_SPACE_ON_RESOURCE", "420 METHOD_FAILURE", "421 DESTINATION_LOCKED", "422 UNPROCESSABLE_ENTITY", "423 LOCKED", "424 FAILED_DEPENDENCY", "425 TOO_EARLY", "426 UPGRADE_REQUIRED", "428 PRECONDITION_REQUIRED", "429 TOO_MANY_REQUESTS", "431 REQUEST_HEADER_FIELDS_TOO_LARGE", "451 UNAVAILABLE_FOR_LEGAL_REASONS", "500 INTERNAL_SERVER_ERROR", "501 NOT_IMPLEMENTED", "502 BAD_GATEWAY", "503 SERVICE_UNAVAILABLE", "504 GATEWAY_TIMEOUT", "505 HTTP_VERSION_NOT_SUPPORTED", "506 VARIANT_ALSO_NEGOTIATES", "507 INSUFFICIENT_STORAGE", "508 LOOP_DETECTED", "509 BANDWIDTH_LIMIT_EXCEEDED", "510 NOT_EXTENDED", "511 NETWORK_AUTHENTICATION_REQUIRED" ]
          },
          "statusCodeValue" : {
            "type" : "integer",
            "format" : "int32"
          }
        }
      },
      "ResponseEntitySTSearchResponse" : {
        "type" : "object",
        "properties" : {
          "body" : {
            "$ref" : "#/components/schemas/STSearchResponse"
          },
          "headers" : {
            "type" : "object",
            "properties" : {
              "accept" : {
                "type" : "array",
                "items" : {
                  "$ref" : "#/components/schemas/MediaType"
                }
              },
              "acceptCharset" : {
                "type" : "array",
                "items" : {
                  "type" : "string"
                }
              },
              "acceptLanguage" : {
                "type" : "array",
                "items" : {
                  "type" : "object",
                  "properties" : {
                    "range" : {
                      "type" : "string"
                    },
                    "weight" : {
                      "type" : "number",
                      "format" : "double"
                    }
                  }
                }
              },
              "acceptLanguageAsLocales" : {
                "type" : "array",
                "items" : {
                  "type" : "object",
                  "properties" : {
                    "country" : {
                      "type" : "string"
                    },
                    "displayCountry" : {
                      "type" : "string"
                    },
                    "displayLanguage" : {
                      "type" : "string"
                    },
                    "displayName" : {
                      "type" : "string"
                    },
                    "displayScript" : {
                      "type" : "string"
                    },
                    "displayVariant" : {
                      "type" : "string"
                    },
                    "extensionKeys" : {
                      "uniqueItems" : true,
                      "type" : "array",
                      "items" : {
                        "type" : "string"
                      }
                    },
                    "iso3Country" : {
                      "type" : "string"
                    },
                    "iso3Language" : {
                      "type" : "string"
                    },
                    "language" : {
                      "type" : "string"
                    },
                    "script" : {
                      "type" : "string"
                    },
                    "unicodeLocaleAttributes" : {
                      "uniqueItems" : true,
                      "type" : "array",
                      "items" : {
                        "type" : "string"
                      }
                    },
                    "unicodeLocaleKeys" : {
                      "uniqueItems" : true,
                      "type" : "array",
                      "items" : {
                        "type" : "string"
                      }
                    },
                    "variant" : {
                      "type" : "string"
                    }
                  }
                }
              },
              "acceptPatch" : {
                "type" : "array",
                "items" : {
                  "$ref" : "#/components/schemas/MediaType"
                }
              },
              "accessControlAllowCredentials" : {
                "type" : "boolean"
              },
              "accessControlAllowHeaders" : {
                "type" : "array",
                "items" : {
                  "type" : "string"
                }
              },
              "accessControlAllowMethods" : {
                "type" : "array",
                "items" : {
                  "type" : "string",
                  "enum" : [ "GET", "HEAD", "POST", "PUT", "PATCH", "DELETE", "OPTIONS", "TRACE" ]
                }
              },
              "accessControlAllowOrigin" : {
                "type" : "string"
              },
              "accessControlExposeHeaders" : {
                "type" : "array",
                "items" : {
                  "type" : "string"
                }
              },
              "accessControlMaxAge" : {
                "type" : "integer",
                "format" : "int64"
              },
              "accessControlRequestHeaders" : {
                "type" : "array",
                "items" : {
                  "type" : "string"
                }
              },
              "accessControlRequestMethod" : {
                "type" : "string",
                "enum" : [ "GET", "HEAD", "POST", "PUT", "PATCH", "DELETE", "OPTIONS", "TRACE" ]
              },
              "all" : {
                "type" : "object",
                "additionalProperties" : {
                  "type" : "string"
                },
                "writeOnly" : true
              },
              "allow" : {
                "uniqueItems" : true,
                "type" : "array",
                "items" : {
                  "type" : "string",
                  "enum" : [ "GET", "HEAD", "POST", "PUT", "PATCH", "DELETE", "OPTIONS", "TRACE" ]
                }
              },
              "basicAuth" : {
                "type" : "string",
                "writeOnly" : true
              },
              "bearerAuth" : {
                "type" : "string",
                "writeOnly" : true
              },
              "cacheControl" : {
                "type" : "string"
              },
              "connection" : {
                "type" : "array",
                "items" : {
                  "type" : "string"
                }
              },
              "contentDisposition" : {
                "$ref" : "#/components/schemas/ContentDisposition"
              },
              "contentLanguage" : {
                "type" : "object",
                "properties" : {
                  "country" : {
                    "type" : "string"
                  },
                  "displayCountry" : {
                    "type" : "string"
                  },
                  "displayLanguage" : {
                    "type" : "string"
                  },
                  "displayName" : {
                    "type" : "string"
                  },
                  "displayScript" : {
                    "type" : "string"
                  },
                  "displayVariant" : {
                    "type" : "string"
                  },
                  "extensionKeys" : {
                    "uniqueItems" : true,
                    "type" : "array",
                    "items" : {
                      "type" : "string"
                    }
                  },
                  "iso3Country" : {
                    "type" : "string"
                  },
                  "iso3Language" : {
                    "type" : "string"
                  },
                  "language" : {
                    "type" : "string"
                  },
                  "script" : {
                    "type" : "string"
                  },
                  "unicodeLocaleAttributes" : {
                    "uniqueItems" : true,
                    "type" : "array",
                    "items" : {
                      "type" : "string"
                    }
                  },
                  "unicodeLocaleKeys" : {
                    "uniqueItems" : true,
                    "type" : "array",
                    "items" : {
                      "type" : "string"
                    }
                  },
                  "variant" : {
                    "type" : "string"
                  }
                }
              },
              "contentLength" : {
                "type" : "integer",
                "format" : "int64"
              },
              "contentType" : {
                "$ref" : "#/components/schemas/MediaType"
              },
              "date" : {
                "type" : "integer",
                "format" : "int64"
              },
              "empty" : {
                "type" : "boolean"
              },
              "etag" : {
                "type" : "string"
              },
              "expires" : {
                "type" : "integer",
                "format" : "int64"
              },
              "host" : {
                "type" : "object",
                "properties" : {
                  "address" : {
                    "type" : "object",
                    "properties" : {
                      "address" : {
                        "type" : "array",
                        "items" : {
                          "type" : "string",
                          "format" : "byte"
                        }
                      },
                      "anyLocalAddress" : {
                        "type" : "boolean"
                      },
                      "canonicalHostName" : {
                        "type" : "string"
                      },
                      "hostAddress" : {
                        "type" : "string"
                      },
                      "hostName" : {
                        "type" : "string"
                      },
                      "linkLocalAddress" : {
                        "type" : "boolean"
                      },
                      "loopbackAddress" : {
                        "type" : "boolean"
                      },
                      "mcglobal" : {
                        "type" : "boolean"
                      },
                      "mclinkLocal" : {
                        "type" : "boolean"
                      },
                      "mcnodeLocal" : {
                        "type" : "boolean"
                      },
                      "mcorgLocal" : {
                        "type" : "boolean"
                      },
                      "mcsiteLocal" : {
                        "type" : "boolean"
                      },
                      "multicastAddress" : {
                        "type" : "boolean"
                      },
                      "siteLocalAddress" : {
                        "type" : "boolean"
                      }
                    }
                  },
                  "hostName" : {
                    "type" : "string"
                  },
                  "hostString" : {
                    "type" : "string"
                  },
                  "port" : {
                    "type" : "integer",
                    "format" : "int32"
                  },
                  "unresolved" : {
                    "type" : "boolean"
                  }
                }
              },
              "ifMatch" : {
                "type" : "array",
                "items" : {
                  "type" : "string"
                }
              },
              "ifModifiedSince" : {
                "type" : "integer",
                "format" : "int64"
              },
              "ifNoneMatch" : {
                "type" : "array",
                "items" : {
                  "type" : "string"
                }
              },
              "ifUnmodifiedSince" : {
                "type" : "integer",
                "format" : "int64"
              },
              "lastModified" : {
                "type" : "integer",
                "format" : "int64"
              },
              "location" : {
                "type" : "string",
                "format" : "uri"
              },
              "origin" : {
                "type" : "string"
              },
              "pragma" : {
                "type" : "string"
              },
              "range" : {
                "type" : "array",
                "items" : {
                  "$ref" : "#/components/schemas/HttpRange"
                }
              },
              "upgrade" : {
                "type" : "string"
              },
              "vary" : {
                "type" : "array",
                "items" : {
                  "type" : "string"
                }
              }
            },
            "additionalProperties" : {
              "type" : "array",
              "items" : {
                "type" : "string"
              }
            }
          },
          "statusCode" : {
            "type" : "string",
            "enum" : [ "100 CONTINUE", "101 SWITCHING_PROTOCOLS", "102 PROCESSING", "103 CHECKPOINT", "200 OK", "201 CREATED", "202 ACCEPTED", "203 NON_AUTHORITATIVE_INFORMATION", "204 NO_CONTENT", "205 RESET_CONTENT", "206 PARTIAL_CONTENT", "207 MULTI_STATUS", "208 ALREADY_REPORTED", "226 IM_USED", "300 MULTIPLE_CHOICES", "301 MOVED_PERMANENTLY", "302 FOUND", "302 MOVED_TEMPORARILY", "303 SEE_OTHER", "304 NOT_MODIFIED", "305 USE_PROXY", "307 TEMPORARY_REDIRECT", "308 PERMANENT_REDIRECT", "400 BAD_REQUEST", "401 UNAUTHORIZED", "402 PAYMENT_REQUIRED", "403 FORBIDDEN", "404 NOT_FOUND", "405 METHOD_NOT_ALLOWED", "406 NOT_ACCEPTABLE", "407 PROXY_AUTHENTICATION_REQUIRED", "408 REQUEST_TIMEOUT", "409 CONFLICT", "410 GONE", "411 LENGTH_REQUIRED", "412 PRECONDITION_FAILED", "413 PAYLOAD_TOO_LARGE", "413 REQUEST_ENTITY_TOO_LARGE", "414 URI_TOO_LONG", "414 REQUEST_URI_TOO_LONG", "415 UNSUPPORTED_MEDIA_TYPE", "416 REQUESTED_RANGE_NOT_SATISFIABLE", "417 EXPECTATION_FAILED", "418 I_AM_A_TEAPOT", "419 INSUFFICIENT_SPACE_ON_RESOURCE", "420 METHOD_FAILURE", "421 DESTINATION_LOCKED", "422 UNPROCESSABLE_ENTITY", "423 LOCKED", "424 FAILED_DEPENDENCY", "425 TOO_EARLY", "426 UPGRADE_REQUIRED", "428 PRECONDITION_REQUIRED", "429 TOO_MANY_REQUESTS", "431 REQUEST_HEADER_FIELDS_TOO_LARGE", "451 UNAVAILABLE_FOR_LEGAL_REASONS", "500 INTERNAL_SERVER_ERROR", "501 NOT_IMPLEMENTED", "502 BAD_GATEWAY", "503 SERVICE_UNAVAILABLE", "504 GATEWAY_TIMEOUT", "505 HTTP_VERSION_NOT_SUPPORTED", "506 VARIANT_ALSO_NEGOTIATES", "507 INSUFFICIENT_STORAGE", "508 LOOP_DETECTED", "509 BANDWIDTH_LIMIT_EXCEEDED", "510 NOT_EXTENDED", "511 NETWORK_AUTHENTICATION_REQUIRED" ]
          },
          "statusCodeValue" : {
            "type" : "integer",
            "format" : "int32"
          }
        }
      },
      "SSRAssignResponse" : {
        "type" : "object",
        "properties" : {
          "outSSRDetail" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/FareRuleSSREvent"
            }
          },
          "outSignature" : {
            "type" : "string"
          },
          "returnSSRDetail" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/FareRuleSSREvent"
            }
          },
          "returnSignature" : {
            "type" : "string"
          }
        }
      },
      "SSRPayload" : {
        "type" : "object",
        "properties" : {
          "adults" : {
            "minimum" : 1,
            "type" : "integer",
            "description" : "Number of adults...",
            "format" : "int32",
            "default" : 1
          },
          "cacheOutFlightDetail" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/FareRuleSSREvent"
            }
          },
          "cacheReturnFlightDetail" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/FareRuleSSREvent"
            }
          },
          "children" : {
            "type" : "integer",
            "description" : "Number of children...",
            "format" : "int32"
          },
          "currency" : {
            "type" : "string"
          },
          "infants" : {
            "type" : "integer",
            "description" : "Number of infants...",
            "format" : "int32"
          },
          "outPassengerSSR" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/PassengerSSRDto"
            }
          },
          "outResult" : {
            "$ref" : "#/components/schemas/FlightResultDto"
          },
          "returnPassengerSSR" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/PassengerSSRDto"
            }
          },
          "returnResult" : {
            "$ref" : "#/components/schemas/FlightResultDto"
          }
        }
      },
      "SSRSearchResponse" : {
        "type" : "object",
        "properties" : {
          "outSSRDetail" : {
            "$ref" : "#/components/schemas/JourneyDetailDto"
          },
          "outSignature" : {
            "type" : "string"
          },
          "returnSSRDetail" : {
            "$ref" : "#/components/schemas/JourneyDetailDto"
          },
          "returnSignature" : {
            "type" : "string"
          }
        }
      },
      "STAddress" : {
        "required" : [ "city", "countryCode" ],
        "type" : "object",
        "properties" : {
          "addressLine1" : {
            "type" : "string"
          },
          "city" : {
            "type" : "string"
          },
          "countryCode" : {
            "type" : "string"
          },
          "countryName" : {
            "type" : "string"
          },
          "number" : {
            "type" : "string"
          },
          "postCode" : {
            "type" : "string"
          },
          "state" : {
            "type" : "string"
          }
        },
        "description" : "Address to search by"
      },
      "STBookAir" : {
        "required" : [ "bookCompany", "profile" ],
        "type" : "object",
        "properties" : {
          "adults" : {
            "type" : "integer",
            "format" : "int32"
          },
          "airConfirmAmount" : {
            "type" : "string"
          },
          "approvalId" : {
            "type" : "string"
          },
          "autoAdd" : {
            "type" : "boolean"
          },
          "bookCompany" : {
            "$ref" : "#/components/schemas/STBookCompany"
          },
          "bookingFeeLookup" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/IdNameDto"
            }
          },
          "bookingFeeOverride" : {
            "type" : "string"
          },
          "callId" : {
            "type" : "string"
          },
          "children" : {
            "type" : "integer",
            "format" : "int32"
          },
          "company" : {
            "$ref" : "#/components/schemas/STBookCompany"
          },
          "email" : {
            "type" : "string"
          },
          "flightOptions" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/IdNameDto"
            }
          },
          "infants" : {
            "type" : "integer",
            "format" : "int32"
          },
          "outBestFlight" : {
            "type" : "string"
          },
          "outCode" : {
            "type" : "string"
          },
          "outPolicyId" : {
            "type" : "string"
          },
          "outSSRDetails" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/FareRuleSSREvent"
            }
          },
          "outSignature" : {
            "type" : "string"
          },
          "paxList" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/PaxDTO"
            }
          },
          "personId" : {
            "type" : "string"
          },
          "policyReason" : {
            "type" : "string"
          },
          "profile" : {
            "$ref" : "#/components/schemas/STBookProfile"
          },
          "quoteId" : {
            "type" : "string"
          },
          "returnBestFlight" : {
            "type" : "string"
          },
          "returnCode" : {
            "type" : "string"
          },
          "returnPolicyId" : {
            "type" : "string"
          },
          "returnSSRDetails" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/FareRuleSSREvent"
            }
          },
          "returnSignature" : {
            "type" : "string"
          },
          "tripId" : {
            "type" : "string"
          },
          "voucher" : {
            "type" : "string"
          }
        }
      },
      "STBookAirResponse" : {
        "type" : "object",
        "properties" : {
          "approvalAdded" : {
            "type" : "boolean"
          },
          "approvalMessage" : {
            "type" : "string"
          },
          "payToExternal" : {
            "type" : "string"
          },
          "payToExternalFeedback" : {
            "type" : "string"
          },
          "payToExternalOriginal" : {
            "type" : "string"
          },
          "payToExternalOriginalCurrency" : {
            "type" : "string"
          },
          "paypalSurchargeFormatted" : {
            "type" : "string"
          },
          "quoteAdded" : {
            "type" : "boolean"
          },
          "total" : {
            "type" : "number"
          },
          "totalDiscount" : {
            "type" : "string"
          },
          "totalFormatted" : {
            "type" : "string"
          },
          "totalPlusExternal" : {
            "type" : "string"
          },
          "totalPlusExternalFeedback" : {
            "type" : "string"
          },
          "tripNumber" : {
            "type" : "string"
          }
        }
      },
      "STBookCar" : {
        "required" : [ "bookCompany", "carHireProduct", "profile" ],
        "type" : "object",
        "properties" : {
          "airline" : {
            "type" : "string"
          },
          "approvalId" : {
            "type" : "string"
          },
          "arrivalNumber" : {
            "type" : "string"
          },
          "bookCompany" : {
            "$ref" : "#/components/schemas/STBookCompany"
          },
          "carHireProduct" : {
            "type" : "string"
          },
          "email" : {
            "type" : "string"
          },
          "flightNumber" : {
            "type" : "string"
          },
          "options" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/IOption"
            }
          },
          "paxList" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/PaxDTO"
            }
          },
          "profile" : {
            "$ref" : "#/components/schemas/STBookProfile"
          },
          "quoteId" : {
            "type" : "string"
          },
          "tripId" : {
            "type" : "string"
          },
          "voucher" : {
            "type" : "string"
          }
        }
      },
      "STBookCarResponse" : {
        "type" : "object",
        "properties" : {
          "approvalAdded" : {
            "type" : "boolean"
          },
          "approvalMessage" : {
            "type" : "string"
          },
          "payToExternal" : {
            "type" : "string"
          },
          "payToExternalFeedback" : {
            "type" : "string"
          },
          "payToExternalOriginal" : {
            "type" : "string"
          },
          "payToExternalOriginalCurrency" : {
            "type" : "string"
          },
          "paypalSurchargeFormatted" : {
            "type" : "string"
          },
          "quoteAdded" : {
            "type" : "boolean"
          },
          "total" : {
            "type" : "number"
          },
          "totalFormatted" : {
            "type" : "string"
          },
          "totalPlusExternal" : {
            "type" : "string"
          },
          "totalPlusExternalFeedback" : {
            "type" : "string"
          },
          "tripNumber" : {
            "type" : "string"
          }
        }
      },
      "STBookCompany" : {
        "required" : [ "companyId", "policyReason" ],
        "type" : "object",
        "properties" : {
          "companyFields" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "string"
            }
          },
          "companyId" : {
            "type" : "string"
          },
          "newApproval" : {
            "type" : "boolean"
          },
          "policyReason" : {
            "type" : "string"
          }
        }
      },
      "STBookContact" : {
        "required" : [ "confirmationEmail", "email", "phoneCountryCode", "phoneNumber" ],
        "type" : "object",
        "properties" : {
          "confirmationEmail" : {
            "type" : "string"
          },
          "email" : {
            "type" : "string"
          },
          "mobileAreaCode" : {
            "type" : "string"
          },
          "mobileCountryCode" : {
            "type" : "string"
          },
          "mobileNumber" : {
            "pattern" : "^[\\d ]{4,20}$",
            "type" : "string"
          },
          "phoneAreaCode" : {
            "type" : "string"
          },
          "phoneCountryCode" : {
            "type" : "string"
          },
          "phoneNumber" : {
            "pattern" : "^[\\d ]{4,20}$",
            "type" : "string"
          }
        }
      },
      "STBookHotel" : {
        "required" : [ "bookCompany", "pnr", "profile" ],
        "type" : "object",
        "properties" : {
          "approvalId" : {
            "type" : "string"
          },
          "bookCompany" : {
            "$ref" : "#/components/schemas/STBookCompany"
          },
          "email" : {
            "type" : "string"
          },
          "pnr" : {
            "$ref" : "#/components/schemas/STPnr"
          },
          "profile" : {
            "$ref" : "#/components/schemas/STBookProfile"
          },
          "quoteId" : {
            "type" : "string"
          },
          "tripId" : {
            "type" : "string"
          },
          "voucher" : {
            "type" : "string"
          }
        }
      },
      "STBookHotelResponse" : {
        "type" : "object",
        "properties" : {
          "approvalAdded" : {
            "type" : "boolean"
          },
          "approvalMessage" : {
            "type" : "string"
          },
          "itineraryInfoList" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/STItineraryInfo"
            }
          },
          "payToExternal" : {
            "type" : "string"
          },
          "payToExternalFeedback" : {
            "type" : "string"
          },
          "payToExternalOriginal" : {
            "type" : "string"
          },
          "payToExternalOriginalCurrency" : {
            "type" : "string"
          },
          "paypalSurchargeFormatted" : {
            "type" : "string"
          },
          "quoteAdded" : {
            "type" : "boolean"
          },
          "total" : {
            "type" : "number"
          },
          "totalFormatted" : {
            "type" : "string"
          },
          "totalPlusExternal" : {
            "type" : "string"
          },
          "totalPlusExternalFeedback" : {
            "type" : "string"
          },
          "tripNumber" : {
            "type" : "string"
          }
        }
      },
      "STBookProfile" : {
        "required" : [ "address", "contact", "familyName", "givenName", "title" ],
        "type" : "object",
        "properties" : {
          "address" : {
            "$ref" : "#/components/schemas/STBookProfileAddress"
          },
          "contact" : {
            "$ref" : "#/components/schemas/STBookContact"
          },
          "familyName" : {
            "type" : "string"
          },
          "givenName" : {
            "type" : "string"
          },
          "title" : {
            "type" : "string"
          }
        }
      },
      "STBookProfileAddress" : {
        "required" : [ "address1", "city", "countryCode", "postcode" ],
        "type" : "object",
        "properties" : {
          "address1" : {
            "type" : "string"
          },
          "address2" : {
            "type" : "string"
          },
          "city" : {
            "type" : "string"
          },
          "country" : {
            "type" : "string"
          },
          "countryCode" : {
            "type" : "string"
          },
          "postcode" : {
            "type" : "string"
          },
          "state" : {
            "type" : "string"
          },
          "suburb" : {
            "type" : "string"
          }
        }
      },
      "STConfirmAir" : {
        "required" : [ "bookCompany", "outResult" ],
        "type" : "object",
        "properties" : {
          "adults" : {
            "minimum" : 1,
            "type" : "integer",
            "description" : "Number of adults...",
            "format" : "int32",
            "default" : 1
          },
          "backPassengerSSR" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/PassengerSSRDto"
            }
          },
          "bookCompany" : {
            "$ref" : "#/components/schemas/STBookCompany"
          },
          "children" : {
            "type" : "integer",
            "description" : "Number of children...",
            "format" : "int32"
          },
          "infants" : {
            "type" : "integer",
            "description" : "Number of infants...",
            "format" : "int32"
          },
          "outPassengerSSR" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/PassengerSSRDto"
            }
          },
          "outResult" : {
            "$ref" : "#/components/schemas/FlightResultDto"
          },
          "outSSRDetail" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/FareRuleSSREvent"
            }
          },
          "outSignature" : {
            "type" : "string"
          },
          "reissue" : {
            "type" : "boolean"
          },
          "returnResult" : {
            "$ref" : "#/components/schemas/FlightResultDto"
          },
          "returnSSRDetail" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/FareRuleSSREvent"
            }
          },
          "returnSignature" : {
            "type" : "string"
          }
        }
      },
      "STConfirmAirResponse" : {
        "type" : "object",
        "properties" : {
          "adultPrice" : {
            "type" : "number"
          },
          "bookingFee" : {
            "type" : "number"
          },
          "childPrice" : {
            "type" : "number"
          },
          "creditCardFee" : {
            "type" : "number"
          },
          "frequentFlyerDetail" : {
            "$ref" : "#/components/schemas/FrequentFlyerDetailDto"
          },
          "grandTotal" : {
            "type" : "number"
          },
          "infantPrice" : {
            "type" : "number"
          },
          "international" : {
            "type" : "boolean"
          },
          "outCode" : {
            "type" : "string"
          },
          "returnCode" : {
            "type" : "string"
          },
          "reviewTotal" : {
            "type" : "number"
          },
          "subTotalAmount" : {
            "$ref" : "#/components/schemas/IAmount"
          },
          "totalAdultPrice" : {
            "type" : "number"
          },
          "totalChildPrice" : {
            "type" : "number"
          },
          "totalInfantPrice" : {
            "type" : "number"
          }
        }
      },
      "STConfirmCar" : {
        "required" : [ "bookCompany" ],
        "type" : "object",
        "properties" : {
          "bookCompany" : {
            "$ref" : "#/components/schemas/STBookCompany"
          },
          "carHireProduct" : {
            "type" : "string"
          }
        }
      },
      "STConfirmHotel" : {
        "required" : [ "bookCompany" ],
        "type" : "object",
        "properties" : {
          "bookCompany" : {
            "$ref" : "#/components/schemas/STBookCompany"
          }
        }
      },
      "STConfirmHotelResponse" : {
        "type" : "object",
        "properties" : {
          "contents" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/STItineraryContent"
            }
          },
          "from" : {
            "type" : "string",
            "format" : "date-time"
          },
          "hotelName" : {
            "type" : "string"
          },
          "until" : {
            "type" : "string",
            "format" : "date-time"
          }
        }
      },
      "STCreditCardDetails" : {
        "required" : [ "cardCVC", "cardHolderName", "cardNumber", "cardType", "expDate" ],
        "type" : "object",
        "properties" : {
          "cardCVC" : {
            "type" : "string"
          },
          "cardHolderName" : {
            "type" : "string"
          },
          "cardNumber" : {
            "type" : "string"
          },
          "cardType" : {
            "type" : "string"
          },
          "expDate" : {
            "type" : "string",
            "format" : "date-time"
          }
        }
      },
      "STGuestContactDetails" : {
        "type" : "object",
        "properties" : {
          "email" : {
            "type" : "string"
          },
          "homePhone" : {
            "type" : "string"
          },
          "mobilePhone" : {
            "type" : "string"
          }
        }
      },
      "STGuestCount" : {
        "type" : "object",
        "properties" : {
          "age" : {
            "type" : "integer",
            "format" : "int32"
          },
          "ageBucket" : {
            "type" : "string"
          },
          "ageQualifyingCode" : {
            "type" : "string"
          },
          "count" : {
            "type" : "integer",
            "format" : "int32"
          },
          "resGuestRPH" : {
            "type" : "string"
          }
        }
      },
      "STHotel" : {
        "type" : "object",
        "properties" : {
          "address" : {
            "$ref" : "#/components/schemas/AddressInfoType"
          },
          "addressLine" : {
            "type" : "string"
          },
          "amenities" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "HOUR_FRONT_DESK", "HOUR_ROOM_SERVICE", "HOUR_SECURITY", "ADJOINING_ROOMS", "AIR_CONDITIONING", "AIRLINE_DESK", "ATM_CASH_MACHINE", "BABY_SITTING", "BBQ_PICNIC_AREA", "BILINGUAL_STAFF", "BOOKSTORE", "BOUTIQUES_STORES", "BRAILED_ELEVATORS", "BUSINESS_LIBRARY", "CAR_RENTAL_DESK", "CASINO", "CHECK_CASHING_POLICY", "CHECK_IN_KIOSK", "COCKTAIL_LOUNGE", "COFFEE_SHOP", "COIN_OPERATED_LAUNDRY", "CONCIERGE_DESK", "CONCIERGE_FLOOR", "CONFERENCE_FACILITIES", "COURTYARD", "CURRENCY_EXCHANGE", "DESK_WITH_ELECTRICAL_OUTLET", "DOCTOR_ON_CALL", "DOOR_MAN", "DRIVING_RANGE", "DRUGSTORE_PHARMACY", "DUTY_FREE_SHOP", "ELEVATORS", "EXECUTIVE_FLOOR", "EXERCISE_GYM", "EXPRESS_CHECK_IN", "EXPRESS_CHECK_OUT", "FAMILY_PLAN", "FLORIST", "FOLIOS", "FREE_AIRPORT_SHUTTLE", "FREE_PARKING", "FREE_TRANSPORTATION", "GAME_ROOM", "GIFT_NEWS_STAND", "HAIRDRESSER_BARBER", "ACCESSIBLE_FACILITIES", "HEALTH_CLUB", "HEATED_POOL", "HOUSEKEEPING___DAILY", "HOUSEKEEPING___WEEKLY", "ICE_MACHINE", "INDOOR_PARKING", "INDOOR_POOL", "JACUZZI", "JOGGING_TRACK", "KENNELS", "LAUNDRY_VALET_SERVICE", "LIQUOR_STORE", "LIVE_ENTERTAINMENT", "MASSAGE_SERVICES", "NIGHTCLUB", "OFF_SITE_PARKING", "ON_SITE_PARKING", "OUTDOOR_PARKING", "OUTDOOR_POOL", "PACKAGE_PARCEL_SERVICES", "PARKING", "PHOTOCOPY_CENTER", "PLAYGROUND", "POOL", "POOLSIDE_SNACK_BAR", "PUBLIC_ADDRESS_SYSTEM", "RAMP_ACCESS", "RECREATIONAL_VEHICLE_PARKING", "RESTAURANT", "ROOM_SERVICE", "SAFE_DEPOSIT_BOX", "SAUNA", "SECURITY", "SHOE_SHINE_STAND", "SHOPPING_MALL", "SOLARIUM", "SPA", "SPORTS_BAR", "STEAM_BATH", "STORAGE_SPACE", "SUNDRY_CONVENIENCE_STORE", "TECHNICAL_CONCIERGE", "THEATRE_DESK", "TOUR_SIGHTSEEING_DESK", "TRANSLATION_SERVICES", "TRAVEL_AGENCY", "TRUCK_PARKING", "VALET_CLEANING", "DRY_CLEANING", "VALET_PARKING_", "VENDING_MACHINES", "VIDEO_TAPES", "WAKEUP_SERVICE", "WHEELCHAIR_ACCESS", "WHIRLPOOL", "MULTILINGUAL_STAFF", "WEDDING_SERVICES", "BANQUET_FACILITIES", "BELL_STAFF_PORTER", "BEAUTY_SHOP_SALON", "COMPLIMENTARY_SELF_SERVICE_LAUNDRY", "DIRECT_DIAL_TELEPHONE", "FEMALE_TRAVELER_ROOM_FLOOR", "PHARMACY", "STABLES", "AC", "DC", "TWO_AC", "ACCESSIBLE_PARKING", "TWO_DC", "BARBEQUE_GRILLS", "WOMENS_CLOTHING", "MENS_CLOTHING", "CHILDRENS_CLOTHING", "SHOPS_AND_COMMERCIAL_SERVICES", "VIDEO_GAMES", "SPORTS_BAR_OPEN_FOR_LUNCH", "SPORTS_BAR_OPEN_FOR_DINNER", "ROOM_SERVICE___FULL_MENU", "ROOM_SERVICE___LIMITED_MENU", "ROOM_SERVICE___LIMITED_HOURS", "VALET_SAME_DAY_DRY_CLEANING", "BODY_SCRUB", "BODY_WRAP", "PUBLIC_AREA_AIR_CONDITIONED", "EFOLIO_AVAILABLE_TO_COMPANY", "INDIVIDUAL_EFOLIO_AVAILABLE", "VIDEO_REVIEW_BILLING", "BUTLER_SERVICE", "COMPLIMENTARY_IN_ROOM_COFFEE_OR_TEA", "COMPLIMENTARY_BUFFET_BREAKFAST", "COMPLIMENTARY_COCKTAILS", "COMPLIMENTARY_COFFEE_IN_LOBBY", "COMPLIMENTARY_CONTINENTAL_BREAKFAST", "COMPLIMENTARY_FULL_AMERICAN_BREAKFAST", "DINNER_DELIVERY_SERVICE_FROM_LOCAL_RESTAURANT", "COMPLIMENTARY_NEWSPAPER_DELIVERED_TO_ROOM", "COMPLIMENTARY_NEWSPAPER_IN_LOBBY", "COMPLIMENTARY_SHOESHINE", "EVENING_RECEPTION", "FRONT_DESK", "GROCERY_SHOPPING_SERVICE_AVAILABLE", "HALAL_FOOD_AVAILABLE", "KOSHER_FOOD_AVAILABLE", "LIMOUSINE_SERVICE", "MANAGERS_RECEPTION", "MEDICAL_FACILITIES_SERVICE", "TELEPHONE_JACK_ADAPTOR_AVAILABLE", "ALL_INCLUSIVE_MEAL_PLAN_", "BUFFET_BREAKFAST", "COMMUNAL_BAR_AREA", "CONTINENTAL_BREAKFAST", "FULL_MEAL_PLAN", "FULL_AMERICAN_BREAKFAST", "MEAL_PLAN_AVAILABLE", "MODIFIED_AMERICAN_MEAL_PLAN", "FOOD_AND_BEVERAGE_OUTLETS", "LOUNGES_BARS", "BARBER_SHOP", "VIDEO_CHECKOUT", "ONSITE_LAUNDRY", "HOUR_FOOD__BEVERAGE_KIOSK", "CONCIERGE_LOUNGE", "PARKING_FEE_MANAGED_BY_HOTEL", "TRANSPORTATION", "BREAKFAST_SERVED_IN_RESTAURANT", "LUNCH_SERVED_IN_RESTAURANT", "DINNER_SERVED_IN_RESTAURANT", "FULL_SERVICE_HOUSEKEEPING", "LIMITED_SERVICE_HOUSEKEEPING", "HIGH_SPEED_INTERNET_ACCESS_FOR_LAPTOP_IN_PUBLIC_AREAS", "WIRELESS_INTERNET_CONNECTION_IN_PUBLIC_AREAS", "ADDITIONAL_SERVICES_AMENITIES_FACILITIES_ON_PROPERTY", "TRANSPORTATION_SERVICES___LOCAL_AREA", "TRANSPORTATION_SERVICES___LOCAL_OFFICE", "DVD_VIDEO_RENTAL", "PARKING_LOT", "PARKING_DECK", "STREET_SIDE_PARKING", "COCKTAIL_LOUNGE_WITH_ENTERTAINMENT", "COCKTAIL_LOUNGE_WITH_LIGHT_FARE", "MOTORCYCLE_PARKING", "PHONE_SERVICES", "BALLROOM", "BUS_PARKING", "CHILDRENS_PLAY_AREA", "CHILDRENS_NURSERY", "DISCO", "EARLY_CHECK_IN", "LOCKER_ROOM", "NON_SMOKING_ROOMS__GENERIC_", "TRAIN_ACCESS", "AEROBICS_INSTRUCTION", "BAGGAGE_HOLD", "BICYCLE_RENTALS", "DIETICIAN", "LATE_CHECK_OUT_AVAILABLE", "PET_SITTING_SERVICES", "PRAYER_MATS", "SPORTS_TRAINER", "TURNDOWN_SERVICE", "DVDS_VIDEOS___CHILDREN", "BANK", "LOBBY_COFFEE_SERVICE", "BANKING_SERVICES", "STAIRWELLS", "PET_AMENITIES_AVAILABLE", "EXHIBITION_CONVENTION_FLOOR", "LONG_TERM_PARKING", "CHILDREN_NOT_ALLOWED", "CHILDREN_WELCOME", "COURTESY_CAR", "HOTEL_DOES_NOT_PROVIDE_PORNOGRAPHIC_FILMS_TV", "HOTSPOTS", "FREE_HIGH_SPEED_INTERNET_CONNECTION", "INTERNET_SERVICES", "PETS_ALLOWED", "GOURMET_HIGHLIGHTS", "CATERING_SERVICES", "COMPLIMENTARY_BREAKFAST", "BUSINESS_CENTER", "BUSINESS_SERVICES", "SECURED_PARKING", "RACQUETBALL", "SNOW_SPORTS", "TENNIS_COURT", "WATER_SPORTS", "CHILD_PROGRAMS", "GOLF", "HORSEBACK_RIDING", "OCEANFRONT", "BEACHFRONT", "HAIR_DRYER", "IRONING_BOARD", "HEATED_GUEST_ROOMS", "TOILET", "PARLOR", "VIDEO_GAME_PLAYER", "THALASSOTHERAPY", "PRIVATE_DINING_FOR_GROUPS", "HEARING_IMPAIRED_SERVICES", "CARRYOUT_BREAKFAST", "DELUXE_CONTINENTAL_BREAKFAST", "HOT_CONTINENTAL_BREAKFAST", "HOT_BREAKFAST", "PRIVATE_POOL", "CONNECTING_ROOMS", "DATA_PORT", "EXTERIOR_CORRIDORS", "GULF_VIEW", "ACCESSIBLE_ROOMS", "HIGH_SPEED_INTERNET_ACCESS", "INTERIOR_CORRIDORS", "HIGH_SPEED_WIRELESS", "KITCHENETTE", "PRIVATE_BATH_OR_SHOWER", "FIRE_SAFETY_COMPLIANT", "WELCOME_DRINK", "BOARDING_PASS_PRINT_OUT_AVAILABLE", "PRINTING_SERVICES_AVAILABLE", "ALL_PUBLIC_AREAS_NON_SMOKING", "MEETING_ROOMS", "MOVIES_IN_ROOM", "SECRETARIAL_SERVICE", "SNOW_SKIING", "WATER_SKIING", "FAX_SERVICE", "GREAT_ROOM", "LOBBY", "MULTIPLE_PHONE_LINES_BILLED_SEPARATELY", "UMBRELLAS", "GAS_STATION", "GROCERY_STORE", "HOUR_COFFEE_SHOP", "AIRPORT_SHUTTLE_SERVICE", "LUGGAGE_SERVICE", "PIANO_BAR", "VIP_SECURITY", "COMPLIMENTARY_WIRELESS_INTERNET", "CONCIERGE_BREAKFAST", "SAME_GENDER_FLOOR", "CHILDREN_PROGRAMS", "BUILDING_MEETS_LOCAL_STATE_AND_COUNTRY_BUILDING_CODES", "INTERNET_BROWSER_ON_TV", "NEWSPAPER", "PARKING___CONTROLLED_ACCESS_GATES_TO_ENTER_PARKING_AREA", "HOTEL_SAFE_DEPOSIT_BOX__NOT_ROOM_SAFE_BOX_", "STORAGE_SPACE_AVAILABLE__FEE", "TYPE_OF_ENTRANCES_TO_GUEST_ROOMS", "BEVERAGE_COCKTAIL", "CELL_PHONE_RENTAL", "COFFEE_TEA", "EARLY_CHECK_IN_GUARANTEE", "FOOD_AND_BEVERAGE_DISCOUNT", "LATE_CHECK_OUT_GUARANTEE", "ROOM_UPGRADE_CONFIRMED", "ROOM_UPGRADE_ON_AVAILABILITY", "SHUTTLE_TO_LOCAL_BUSINESSES", "SHUTTLE_TO_LOCAL_ATTRACTIONS", "SOCIAL_HOUR", "VIDEO_BILLING", "WELCOME_GIFT", "HYPOALLERGENIC_ROOMS", "ROOM_AIR_FILTRATION", "SMOKE_FREE_PROPERTY", "WATER_PURIFICATION_SYSTEM_IN_USE", "POOLSIDE_SERVICE", "CLOTHING_STORE", "ELECTRIC_CAR_CHARGING_STATIONS", "OFFICE_RENTAL", "PIANO", "INCOMING_FAX", "OUTGOING_FAX", "SEMI_PRIVATE_SPACE", "LOADING_DOCK", "BABY_KIT", "CHILDRENS_BREAKFAST", "CLOAKROOM_SERVICE", "COFFEE_LOUNGE", "EVENTS_TICKET_SERVICE", "LATE_CHECK_IN", "LIMITED_PARKING", "OUTDOOR_SUMMER_BAR_CAFÉ", "NO_PARKING_AVAILABLE", "BEER_GARDEN", "GARDEN_LOUNGE_BAR", "SUMMER_TERRACE", "WINTER_TERRACE", "ROOF_TERRACE", "BEACH_BAR", "HELICOPTER_SERVICE", "FERRY", "TAPAS_BAR", "CAFÉ_BAR", "SNACK_BAR", "GUESTROOM_WIRED_INTERNET", "GUESTROOM_WIRELESS_INTERNET", "FITNESS_CENTER", "ALCOHOLIC_BEVERAGES", "NON_ALCOHOLIC_BEVERAGES", "HEALTH_AND_BEAUTY_SERVICES", "MOBILE_DIGITAL_CHECK_IN", "MOBILE_DIGITAL_CHECK_OUT", "CHOOSE_A_ROOM", "ENHANCED_HYGIENE_CLEANLINESS_PROTOCOLS", "CLEANLINESS_CERTIFICATION", "CONTACTLESS_PAYMENT_AVAILABLE_DURING_CHECK_IN_OUT", "WRAPPED_DISPOSABLE_OR_METAL_STRAWS", "INDIVIDUALLY_SEALED_DISPOSABLE_UTENSILS_AVAILABLE", "INDIVIDUALLY_PACKAGED_FOOD_OPTIONS", "ADDITIONAL_CLEANING_SERVICES", "CONTACTLESS_IN_ROOM_DINING", "HOTEL_STAFF_ALLOWED_TO_ENTER_A_HOTEL_ROOM_ONCE_A_GUEST_HAS_CHECKED_IN", "STAFFS_ACCESS_TO_GUEST_ROOMS_SUBJECT_TO_THE_GUESTS_AUTHORIZATION", "BUFFETS_OR_PLATED_MEALS_SERVED_ONLY_BY_EMPLOYEES_ATTENDANTS", "PRE_PACKAGED_BREAKFAST_ITEMS", "NON_TOUCH_OPERATIONS_AVAILABLE_IN_PUBLIC_BATHROOMS", "MEASURES_ARE_IN_PLACE_TO_AVOID_GUESTS_HANDLING_FOOD_AT_BUFFETS", "SELF_SERVICE_FOOD_UTENSILS_REPLACED_FREQUENTLY", "LUGGAGE_STORED_PER_GROUP_OF_GUESTS", "NON_SHAREABLE_FOOD_AND_BEVERAGE_MENUS_PROVIDED", "HOUSEKEEPING_BY_REQUEST", "CONTROLLED_OCCUPANCY_IN_ELEVATORS_LIFTS", "PROPERTY_AIR_PURIFICATION_SYSTEM", "ALLERGY_FRIENDLY_ROOMS", "MEDICAL_GRADE_AIR_PURIFICATION_SYSTEM", "TESTING_AND_TRACING_POLICIES", "AHLA_SAFE_STAY_COMPLIANT" ]
            }
          },
          "areaID" : {
            "type" : "string"
          },
          "chainCode" : {
            "type" : "string"
          },
          "chainName" : {
            "type" : "string"
          },
          "checkInDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "checkOutDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "currencyCode" : {
            "type" : "string"
          },
          "distanceDescription" : {
            "type" : "string"
          },
          "hotelCityCode" : {
            "type" : "string"
          },
          "hotelCode" : {
            "type" : "string"
          },
          "hotelCodeContext" : {
            "type" : "string"
          },
          "hotelName" : {
            "type" : "string"
          },
          "hotelSegmentCategoryCode" : {
            "type" : "string"
          },
          "images" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "localStarRating" : {
            "type" : "integer",
            "format" : "int32"
          },
          "lowestPrice" : {
            "type" : "number"
          },
          "officialHotelGuideRating" : {
            "type" : "string",
            "enum" : [ "First_Class", "Luxury_Hotels", "Tourist" ]
          },
          "position" : {
            "$ref" : "#/components/schemas/STLatLng"
          },
          "recreations" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "DRIVING_RANGE", "GOLF_COURSE_TOTAL_YARDAGE", "NUMBER_OF_HOLES", "PAR_FOR_COURSE", "PUTTING_GREEN", "AVAILABLE_EQUIPMENT", "CARDIOVASCULAR_EQUIPMENT", "FREE_WEIGHTS", "SEPARATE_MENS_AND_WOMENS_LOCKERS", "SEPARATE_MENS_AND_WOMENS_STEAM_ROOMS", "BOOT_WARMERS", "SKI_LOCKERS", "SNOW_BOARDING", "SNOW_MOBILING", "BODY_SCRUB", "BODY_WRAP", "FACIALS", "FITNESS_COUNSELING", "FOOT_BATH", "LAP_POOL", "MANICURES_PEDICURES", "MASSAGES", "MASSAGE_LESSONS", "PARAFFIN_HAND_TREATMENT", "PLUNGE_POOLS", "SPA_RESTAURANT", "STEAM_ROOM", "THERAPY_BATHS", "WAXING", "HEATED_POOL", "LIFEGUARD_ON_DUTY", "POOL_DEPTH", "WHIRLPOOL_OPEN_YEAR_ROUND", "APPOINTMENT_REQUIRED", "CLASSES_AVAILABLE", "FACILITY_TYPE", "GUEST_PRIVILEGES_AVAILABLE", "LESSONS_AVAILABLE", "RENTAL_INFORMATION", "RESTRICTED_AGE_FOR_CHILDREN_WITHOUT_ADULT_SUPERVISION", "SERVICES_AVAILABLE", "TEEN_PROGRAMS", "TOWELS_AVAILABLE", "CHILDRENS_PROGRAM", "FITNESS_CENTER_EQUIPMENT_REPLACEMENT_DATE", "PRIVATE", "PUBLIC", "SLOPE", "ROWING_MACHINE", "STAIR_STEPPER", "STATIONARY_BIKE", "TREADMILL", "GOLF_LOCATION", "GREENS_FEES", "ELLIPTICALS_", "COMPLIMENTARY_WATER_AVAILABLE_", "FRESH_WHOLE_FRUIT_AVAILABLE_", "STRENGTH_EQUIPMENT", "WEIGHT_MACHINE", "CORE_STABILITY_TRAINING_EQUIPMENT", "SAUNA_ROOM_", "SPA_TREATMENT_ROOMS", "GOLF_SCHOOL_INSTRUCTION", "CLUBHOUSE", "CLUBHOUSE_RESTAURANT", "GOLF_SHOP", "MENS_SERVICES", "SCALP_AND_HAIR_TREATMENTS", "EYE_TREATMENTS", "LIP_TREATMENTS", "AYURVEDIC_TREATMENTS", "MAKEUP_SERVICES", "SEPARATE_MENS_AND_WOMENS_LOUNGES", "IN_SUITE_MASSAGE", "COUPLES_MASSAGE", "KIDS_SERVICES", "TENNIS_CLINIC", "TENNIS_BALL_MACHINE_RENTAL", "TENNIS_RACQUET_RENTAL", "BEACH_UMBRELLA", "BEACH_CABANAS", "STRETCHING", "HIKING_ROUTES", "DIVING_CENTER", "BEAUTY_CABIN", "BODY_TREATMENTS", "MEDICAL_CABIN", "PEDICURE", "RESPIRATORY_THERAPY_AREA", "SHOWERS", "SHOP", "SWIMMING_POOL", "WHIRLPOOL", "LOCKER_ROOM", "FITNESS_CLASSES", "SPORTS_TRAINER", "THALASSOTHERAPY", "CONTACTLESS_PAYMENT_AVAILABLE", "DISINFECTANT_WIPES_AVAILABLE", "LOCKERS_ARE_ASSIGNED_TO_ENSURE_SOCIAL_DISTANCING", "LOCKERS_ARE_PRE_LOCKED_TO_PREVENT_CONTAMINATION", "PRIVATE_SPACES_DESIGNATED", "DISINFECTED_AFTER_EACH_USE", "FREQUENTLY_DISINFECTED", "RESERVATION_REQUIRED", "LIMITED_OCCUPANCY" ]
            }
          },
          "rooms" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/STRoom"
            }
          },
          "supplierIntegrationLevel" : {
            "type" : "string"
          },
          "upRatings" : {
            "type" : "array",
            "writeOnly" : true,
            "items" : {
              "$ref" : "#/components/schemas/Award"
            }
          },
          "vendorMessages" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/MessagePayload"
            }
          },
          "vendorTextMessage" : {
            "type" : "string"
          }
        }
      },
      "STHotelGuest" : {
        "required" : [ "birthDate", "familyName", "givenName", "passengerRefNum" ],
        "type" : "object",
        "properties" : {
          "birthDate" : {
            "pattern" : "yyyy-MM-dd",
            "type" : "string",
            "format" : "date-time"
          },
          "familyName" : {
            "type" : "string"
          },
          "givenName" : {
            "type" : "string"
          },
          "hotelGuestType" : {
            "type" : "string",
            "enum" : [ "BookingOccupantGuest", "BookingOnlyNonGuest", "OccupantGuest" ]
          },
          "passengerRefNum" : {
            "type" : "integer"
          },
          "title" : {
            "type" : "string",
            "enum" : [ "MR", "MRS", "MS" ]
          }
        }
      },
      "STHotelSimplified" : {
        "type" : "object",
        "properties" : {
          "address" : {
            "type" : "string"
          },
          "name" : {
            "type" : "string"
          },
          "policy" : {
            "type" : "string"
          }
        }
      },
      "STItineraryContent" : {
        "type" : "object",
        "properties" : {
          "content" : {
            "type" : "string"
          },
          "label" : {
            "type" : "string"
          }
        }
      },
      "STItineraryInfo" : {
        "type" : "object",
        "properties" : {
          "contents" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/STItineraryContent"
            }
          },
          "from" : {
            "type" : "string",
            "format" : "date"
          },
          "hotelName" : {
            "type" : "string"
          },
          "until" : {
            "type" : "string",
            "format" : "date"
          }
        }
      },
      "STLatLng" : {
        "required" : [ "lat", "lng" ],
        "type" : "object",
        "properties" : {
          "lat" : {
            "type" : "number",
            "format" : "double"
          },
          "lng" : {
            "type" : "number",
            "format" : "double"
          }
        }
      },
      "STPNRRequest" : {
        "type" : "object",
        "properties" : {
          "contactDetail" : {
            "$ref" : "#/components/schemas/STGuestContactDetails"
          },
          "final" : {
            "type" : "boolean"
          },
          "isFinal" : {
            "type" : "boolean"
          },
          "optionCode" : {
            "type" : "integer"
          },
          "stRoomBookingDetails" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/STRoomBookingDetail"
            }
          }
        }
      },
      "STPaymentGuarantee" : {
        "type" : "object",
        "properties" : {
          "guaranteeCode" : {
            "type" : "string"
          },
          "guaranteeCodeType" : {
            "type" : "string"
          },
          "paymentAccepted" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "AX", "UP", "DC", "JC", "MC", "VI", "EFT" ]
            }
          }
        }
      },
      "STPnr" : {
        "type" : "object",
        "properties" : {
          "agencyRef" : {
            "type" : "integer"
          },
          "companyId" : {
            "type" : "string"
          },
          "controlNumber" : {
            "type" : "string"
          },
          "hotel" : {
            "$ref" : "#/components/schemas/STHotelSimplified"
          },
          "requestDetails" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/STRoomBookingDetail"
            }
          }
        }
      },
      "STPricingRequest" : {
        "required" : [ "fromDate" ],
        "type" : "object",
        "properties" : {
          "bookingCode" : {
            "type" : "string",
            "writeOnly" : true
          },
          "chainCode" : {
            "type" : "string",
            "writeOnly" : true
          },
          "cityCode" : {
            "type" : "string",
            "writeOnly" : true
          },
          "fromDate" : {
            "pattern" : "yyyy-MM-dd",
            "type" : "string",
            "format" : "date-time"
          },
          "guests" : {
            "type" : "integer",
            "format" : "int32",
            "writeOnly" : true
          },
          "hotelCode" : {
            "type" : "string",
            "writeOnly" : true
          },
          "hotelCodeContext" : {
            "type" : "string",
            "writeOnly" : true
          },
          "mealIncluded" : {
            "type" : "boolean",
            "writeOnly" : true
          },
          "ratePlanCode" : {
            "type" : "string",
            "writeOnly" : true
          },
          "roomTypeCode" : {
            "type" : "string",
            "writeOnly" : true
          },
          "rooms" : {
            "type" : "integer",
            "format" : "int32",
            "writeOnly" : true
          },
          "sourceOfBusiness" : {
            "type" : "string",
            "writeOnly" : true,
            "enum" : [ "GDS", "Aggregator" ]
          },
          "toDate" : {
            "pattern" : "yyyy-MM-dd",
            "type" : "string",
            "format" : "date-time"
          }
        }
      },
      "STRate" : {
        "type" : "object",
        "properties" : {
          "beforeTax" : {
            "type" : "number"
          },
          "currencyCode" : {
            "type" : "string"
          },
          "description" : {
            "type" : "string"
          },
          "descriptions" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/MessageSubSectionPayload"
            }
          },
          "holdTime" : {
            "type" : "integer",
            "format" : "int32"
          },
          "payCode" : {
            "type" : "string",
            "enum" : [ "CASH", "DIRECT_BILL", "VOUCHER", "PRE_PAY", "CREDIT_CARD", "DEBIT_CARD", "CHECK", "DEPOSIT", "BUSINESS_ACCOUNT", "CENTRAL_BILL", "COUPON", "BUSINESS_CHECK", "PERSONAL_CHECK", "MONEY_ORDER", "REDEMPTION", "BARTER", "MISCELLANEOUS_CHARGE_ORDER", "TRAVEL_AGENCY_NAME_ADDRESS", "TRAVEL_AGENCY_IATA_NUMBER", "CERTIFIED_CHECK", "CLUB_MEMBERSHIP_ID", "FREQUENT_GUEST_NUMBER", "FREQUENT_TRAVELER_NUMBER", "GUEST_NAME_ADDRESS", "SPECIAL_INDUSTRY_PROGRAM", "TOUR_ORDER", "TRAVELERS_CHECK", "WIRE_PAYMENT", "COMPANY_NAME_ADDRESS", "CORPORATE_ID_CD_NUMBER", "GUARANTEE", "OTHER_INFORMATION", "OVERRIDE_GUARANTEE_INFORMATION", "CORPORATE", "AIRLINE_PAYMENT_CARD", "AIR_TRAVEL_CARD", "MISCELLANEOUS", "NONE", "TICKET", "PAYMENT_MANAGER", "PAYMENT_SERVICE", "MOBILE_PAYMENT", "VIRTUAL_CARD", "GUARANTEE_TO_PROPERTY", "FLIGHT_NUMBER", "ONLINE_PAYMENT__EXAMPLE_PAYPAL_ALIPAY_APPLEPAY", "PAY_BY_POINTS", "PAY_BY_EFT__ELECTRONIC_FUNDS_TRANSFER_", "PAYMENT_REFERENCE" ]
          },
          "perUnit" : {
            "type" : "string",
            "enum" : [ "YEAR", "MONTH", "WEEK", "DAY", "HOUR", "SECOND", "FULL_DURATION", "MINUTE" ]
          }
        }
      },
      "STRatePlan" : {
        "type" : "object",
        "properties" : {
          "availability" : {
            "type" : "string",
            "enum" : [ "CHANGE_DURING_STAY", "MULTIPLE_NIGHTS", "EXCLUSIVE", "ON_REQUEST", "LIMITED_AVAILABILITY", "AVAILABLE_FOR_SALE", "CLOSED_OUT", "OTHER_AVAILABLE", "UNABLE_TO_PROCESS", "NO_AVAILABILITY", "ROOM_TYPE_CLOSED", "RATE_PLAN_CLOSED", "LOS_RESTRICTED", "RESTRICTED", "DOES_NOT_EXIST" ]
          },
          "breakfast" : {
            "type" : "boolean"
          },
          "commission" : {
            "$ref" : "#/components/schemas/STRoomCommissionDetail"
          },
          "description" : {
            "type" : "string"
          },
          "descriptions" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "meal_CODES" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "NONE", "ALL", "ROOM_ONLY", "HALF_BOARD", "FULL_BOARD", "BREAKFAST" ]
            }
          },
          "policies" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/STRoomPenaltiesDetail"
            }
          },
          "rateIndicator" : {
            "type" : "string",
            "enum" : [ "CHANGE_DURING_STAY", "MULTIPLE_NIGHTS", "EXCLUSIVE", "ON_REQUEST", "LIMITED_AVAILABILITY", "AVAILABLE_FOR_SALE", "CLOSED_OUT", "OTHER_AVAILABLE", "UNABLE_TO_PROCESS", "NO_AVAILABILITY", "ROOM_TYPE_CLOSED", "RATE_PLAN_CLOSED", "LOS_RESTRICTED", "RESTRICTED", "DOES_NOT_EXIST" ]
          },
          "ratePlanCode" : {
            "type" : "string"
          },
          "roomRates" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/STRoomRate"
            }
          },
          "stPaymentGrantees" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/STPaymentGuarantee"
            }
          }
        }
      },
      "STRoom" : {
        "type" : "object",
        "properties" : {
          "availabilityStatus" : {
            "type" : "string"
          },
          "bookingType" : {
            "type" : "string",
            "enum" : [ "GDS", "Aggregator" ]
          },
          "chainCode" : {
            "type" : "string"
          },
          "description" : {
            "type" : "string"
          },
          "guestCounts" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/STGuestCount"
            }
          },
          "marketCode" : {
            "type" : "string"
          },
          "ratePlans" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/STRatePlan"
            }
          },
          "roomRates" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/STRoomRate"
            }
          },
          "roomTotal" : {
            "$ref" : "#/components/schemas/STRoomTotal"
          },
          "roomTypes" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/STRoomType"
            }
          },
          "serviceTypes" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/STServiceType"
            }
          }
        }
      },
      "STRoomBookingDetail" : {
        "required" : [ "bookingCode", "description", "fromDate", "guests", "roomTotal" ],
        "type" : "object",
        "properties" : {
          "allowedGuests" : {
            "type" : "integer",
            "format" : "int32"
          },
          "bookingCode" : {
            "type" : "string"
          },
          "checkInTime" : {
            "type" : "string",
            "format" : "date-time"
          },
          "checkOutTime" : {
            "type" : "string",
            "format" : "date-time"
          },
          "commissionDetail" : {
            "$ref" : "#/components/schemas/STRoomCommissionDetail"
          },
          "description" : {
            "type" : "string"
          },
          "fromDate" : {
            "pattern" : "yyyy-MM-dd",
            "type" : "string",
            "format" : "date-time"
          },
          "guests" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/STHotelGuest"
            }
          },
          "mealsIncluded" : {
            "type" : "boolean"
          },
          "roomTotal" : {
            "$ref" : "#/components/schemas/STRoomTotal"
          },
          "roomTypeCode" : {
            "type" : "string"
          },
          "sourceOfBusiness" : {
            "type" : "string",
            "enum" : [ "GDS", "Aggregator" ]
          },
          "toDate" : {
            "pattern" : "yyyy-MM-dd",
            "type" : "string",
            "format" : "date-time"
          }
        }
      },
      "STRoomCommissionDetail" : {
        "type" : "object",
        "properties" : {
          "amount" : {
            "type" : "number"
          },
          "comment" : {
            "$ref" : "#/components/schemas/MessageSubSectionPayload"
          },
          "commissionableAmount" : {
            "$ref" : "#/components/schemas/CommissionableAmount"
          },
          "currencyCode" : {
            "type" : "string"
          },
          "percent" : {
            "type" : "number"
          },
          "statusType" : {
            "type" : "string"
          }
        }
      },
      "STRoomPenaltiesDetail" : {
        "type" : "object",
        "properties" : {
          "amount" : {
            "type" : "number"
          },
          "descriptionList" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "descriptions" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/MessageSubSectionPayload"
            }
          },
          "percentage" : {
            "type" : "number"
          },
          "policyCode" : {
            "type" : "string"
          }
        }
      },
      "STRoomRate" : {
        "type" : "object",
        "properties" : {
          "bookingCode" : {
            "type" : "string"
          },
          "description" : {
            "type" : "string"
          },
          "descriptions" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "features" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "ADJOINING_ROOMS", "AIR_CONDITIONING", "ALARM_CLOCK", "ALL_NEWS_CHANNEL", "AM_FM_RADIO", "BABY_LISTENING_DEVICE", "BALCONY_LANAI_TERRACE", "BARBEQUE_GRILLS", "BATH_TUB_WITH_SPRAY_JETS", "BATHROBE", "BATHROOM_AMENITIES", "BATHROOM_TELEPHONE", "BATHTUB", "BATHTUB_ONLY", "BATHTUB_SHOWER_COMBINATION", "BIDET", "BOTTLED_WATER", "CABLE_TELEVISION", "COFFEE_TEA_MAKER", "COLOR_TELEVISION", "COMPUTER", "CONNECTING_ROOMS", "CONVERTERS__VOLTAGE_ADAPTORS", "COPIER", "CORDLESS_PHONE", "CRIBS", "DATA_PORT", "DESK", "DESK_WITH_LAMP", "DINING_GUIDE", "DIRECT_DIAL_PHONE_NUMBER", "DISHWASHER", "DOUBLE_BEDS", "DUAL_VOLTAGE_OUTLET", "ELECTRICAL_CURRENT_VOLTAGE", "ERGONOMIC_CHAIR", "EXTENDED_PHONE_CORD", "FAX_MACHINE", "FIRE_ALARM", "FIRE_ALARM_WITH_LIGHT", "FIREPLACE", "FREE_TOLL_FREE_CALLS", "FREE_CALLS", "FREE_CREDIT_CARD_ACCESS_CALLS", "FREE_LOCAL_CALLS", "FREE_MOVIES_VIDEO", "FULL_KITCHEN", "GRAB_BARS_IN_BATHROOM", "GRECIAN_TUB", "HAIRDRYER", "HIGH_SPEED_INTERNET_CONNECTION", "INTERACTIVE_WEB_TV", "INTERNATIONAL_DIRECT_DIALING", "INTERNET_ACCESS", "IRON", "IRONING_BOARD", "WHIRPOOL", "KING_BED", "KITCHEN", "KITCHEN_SUPPLIES", "KITCHENETTE", "KNOCK_LIGHT", "LAPTOP", "LARGE_DESK", "LARGE_WORK_AREA", "LAUNDRY_BASKET_CLOTHES_HAMPER", "LOFT", "MICROWAVE", "MINIBAR", "MODEM", "MODEM_JACK", "MULTI_LINE_PHONE", "NEWSPAPER", "NON_SMOKING", "NOTEPADS", "OFFICE_SUPPLIES", "OVEN", "PAY_PER_VIEW_MOVIES_ON_TV", "PENS", "PHONE_IN_BATHROOM", "PLATES_AND_BOWLS", "POTS_AND_PANS", "PRAYER_MATS", "PRINTER", "PRIVATE_BATHROOM", "QUEEN_BED", "RECLINER", "REFRIGERATOR", "REFRIGERATOR_WITH_ICE_MAKER", "REMOTE_CONTROL_TELEVISION", "ROLLAWAY_BED", "SAFE", "SCANNER", "SEPARATE_CLOSET", "SEPARATE_MODEM_LINE_AVAILABLE", "SHOE_POLISHER", "SHOWER_ONLY", "SILVERWARE_UTENSILS", "SITTING_AREA", "SMOKE_DETECTORS", "SMOKING", "SOFA_BED", "SPEAKER_PHONE", "STEREO", "STOVE", "TAPE_RECORDER", "TELEPHONE", "TELEPHONE_FOR_HEARING_IMPAIRED", "TELEPHONES_WITH_MESSAGE_LIGHT", "TOASTER_OVEN", "TROUSER_PANT_PRESS", "TURN_DOWN_SERVICE", "TWIN_BED", "VAULTED_CEILINGS", "VCR_MOVIES", "VCR_PLAYER", "VIDEO_GAMES", "VOICE_MAIL", "WAKE_UP_CALLS", "WATER_CLOSET", "WATER_PURIFICATION_SYSTEM", "WET_BAR", "WIRELESS_INTERNET_CONNECTION", "WIRELESS_KEYBOARD", "ADAPTOR_AVAILABLE_FOR_TELEPHONE_PC_USE", "AIR_CONDITIONING_INDIVIDUALLY_CONTROLLED_IN_ROOM", "BATHTUB_WHIRLPOOL_SEPARATE", "TELEPHONE_WITH_DATA_PORTS", "CD__PLAYER", "COMPLIMENTARY_LOCAL_CALLS_TIME_LIMIT", "EXTRA_PERSON_CHARGE_FOR_ROLLAWAY_USE", "DOWN_FEATHER_PILLOWS", "DESK_WITH_ELECTRICAL_OUTLET", "ESPN_AVAILABLE", "FOAM_PILLOWS", "HBO_AVAILABLE", "HIGH_CEILINGS", "MARBLE_BATHROOM", "LIST_OF_MOVIE_CHANNELS_AVAILABLE", "PETS_ALLOWED", "OVERSIZED_BATHTUB", "SHOWER", "SINK_IN_ROOM", "SOUNDPROOFED_ROOM", "STORAGE_SPACE", "TABLES_AND_CHAIRS", "TWO_LINE_PHONE", "WALK_IN_CLOSET", "WASHER_DRYER", "WEIGHT_SCALE", "WELCOME_GIFT", "SPARE_ELECTRICAL_OUTLET_AVAILABLE_AT_DESK", "NON_REFUNDABLE_CHARGE_FOR_PETS", "REFUNDABLE_DEPOSIT_FOR_PETS", "SEPARATE_TUB_AND_SHOWER", "ENTRANCE_TYPE_TO_GUEST_ROOM", "CEILING_FAN", "CNN_AVAILABLE", "ELECTRICAL_ADAPTORS_AVAILABLE", "BUFFET_BREAKFAST", "ACCESSIBLE_ROOM", "CLOSETS_IN_ROOM", "DVD_PLAYER", "MINI_REFRIGERATOR", "SEPARATE_LINE_BILLING_FOR_MULTI_LINE_PHONE", "SELF_CONTROLLED_HEATING_COOLING_SYSTEM", "TOASTER", "ANALOG_DATA_PORT", "COLLECT_CALLS", "INTERNATIONAL_CALLS", "CARRIER_ACCESS", "INTERSTATE_CALLS", "INTRASTATE_CALLS", "LOCAL_CALLS", "LONG_DISTANCE_CALLS", "OPERATOR_ASSISTED_CALLS", "CREDIT_CARD_ACCESS_CALLS", "CALLING_CARD_CALLS", "TOLL_FREE_CALLS", "UNIVERSAL_AC_DC_ADAPTORS", "BATHTUB_SEAT", "CANOPY_POSTER_BED", "CUPS_GLASSWARE", "ENTERTAINMENT_CENTER", "FAMILY_OVERSIZED_ROOM", "HYPOALLERGENIC_BED", "HYPOALLERGENIC_PILLOWS", "LAMP", "MEAL_INCLUDED___BREAKFAST", "MEAL_INCLUDED___CONTINENTAL_BREAKFAST", "MEAL_INCLUDED___DINNER", "MEAL_INCLUDED___LUNCH", "SHARED_BATHROOM", "TELEPHONE_TDD_TEXTPHONE", "WATER_BED", "EXTRA_ADULT_CHARGE", "EXTRA_CHILD_CHARGE", "EXTRA_CHILD_CHARGE_FOR_ROLLAWAY_USE", "MEAL_INCLUDED__FULL_AMERICAN_BREAKFAST", "FUTON", "MURPHY_BED", "TATAMI_MATS", "SINGLE_BED", "ANNEX_ROOM", "FREE_NEWSPAPER", "HONEYMOON_SUITES", "COMPLIMENTARY_HIGH_SPEED_INTERNET_IN_ROOM", "MAID_SERVICE", "PC_HOOK_UP_IN_ROOM", "SATELLITE_TELEVISION", "VIP_ROOMS", "CELL_PHONE_RECHARGER", "DVR_PLAYER", "IPOD_DOCKING_STATION", "MEDIA_CENTER", "PLUG__PLAY_PANEL", "SATELLITE_RADIO", "VIDEO_ON_DEMAND", "EXTERIOR_CORRIDORS", "GULF_VIEW", "ACCESSIBLE_ROOM_TA", "INTERIOR_CORRIDORS", "MOUNTAIN_VIEW", "OCEAN_VIEW", "HIGH_SPEED_INTERNET_ACCESS_FEE", "HIGH_SPEED_WIRELESS", "PREMIUM_MOVIE_CHANNELS", "SLIPPERS", "FIRST_NIGHTERS_KIT", "CHAIR_PROVIDED_WITH_DESK", "PILLOW_TOP_MATTRESS", "FEATHER_BED", "DUVET", "LUXURY_LINEN_TYPE", "INTERNATIONAL_CHANNELS", "PANTRY", "DISH_CLEANING_SUPPLIES", "DOUBLE_VANITY", "LIGHTED_MAKEUP_MIRROR", "UPGRADED_BATHROOM_AMENITIES", "VCR_PLAYER_AVAILABLE_AT_FRONT_DESK", "INSTANT_HOT_WATER", "OUTDOOR_SPACE", "HINOKI_TUB", "PRIVATE_POOL", "HIGH_DEFINITION__HD__FLAT_PANEL_TELEVISION____32_INCHES_OR_GREATER_", "ROOM_WINDOWS_OPEN", "BEDDING_TYPE_UNKNOWN_OR_UNSPECIFIED", "FULL_BED", "ROUND_BED", "TV", "CHILD_ROLLAWAY", "DVD_PLAYER_AVAILABLE_AT_FRONT_DESK", "VIDEO_GAME_PLAYER", "VIDEO_GAME_PLAYER_AVAILABLE_AT_FRONT_DESK", "DINING_ROOM_SEATS", "FULL_SIZE_MIRROR", "MOBILE_CELLULAR_PHONES", "MOVIES", "MULTIPLE_CLOSETS", "PLATES_GLASSWARE", "SAFE_LARGE_ENOUGH_TO_ACCOMMODATE_A_LAPTOP", "BED_LINEN_THREAD_COUNT", "BLACKOUT_CURTAIN", "BLURAY_PLAYER", "DEVICE_WITH_MP3", "NO_ADULT_CHANNELS_OR_ADULT_CHANNEL_LOCK", "NON_ALLERGENIC_ROOM", "PILLOW_TYPE", "SEATING_AREA_WITH_SOFA_CHAIR", "SEPARATE_TOILET_AREA", "WEB_ENABLED", "WIDESCREEN_TV", "OTHER_DATA_CONNECTION", "PHONELINE_BILLED_SEPARATELY", "SEPARATE_TUB_OR_SHOWER", "VIDEO_GAMES_SECOND", "ROOF_VENTILATOR", "CHILDRENS_PLAYPEN", "PLUNGE_POOL", "DVD_MOVIES", "AIR_FILTRATION", "EXERCISE_EQUIPMENT_IN_ROOM", "WRAPPED_COFFEE_AND_CONDIMENTS_PACKAGES", "TV_REMOTES_DISINFECTED", "EXTRANEOUS_ROOM_AMENITIES_REMOVED", "ELECTRONICS_CONTROLLED_BY_PERSONAL_MOBILE_DEVICE", "TV_CONTROLLED_BY_PERSONAL_MOBILE_DEVICE_", "VOICE_ENABLED_ROOM_CONTROLS_", "ROOM_AIR_PURIFICATION_SYSTEM", "ALLERGY_FRIENDLY_ROOM", "MEDICAL_GRADE_AIR_PURIFICATION_SYSTEM", "ALL_SURFACES_SANITIZED_BETWEEN_STAYS" ]
            }
          },
          "images" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "numberOfUnits" : {
            "type" : "integer",
            "format" : "int64"
          },
          "ratePlanCode" : {
            "type" : "string"
          },
          "rates" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/STRate"
            }
          },
          "roomTypeCode" : {
            "type" : "string"
          }
        }
      },
      "STRoomTotal" : {
        "type" : "object",
        "properties" : {
          "afterTax" : {
            "type" : "number"
          },
          "beforeTax" : {
            "type" : "number"
          },
          "currencyCode" : {
            "type" : "string"
          },
          "taxes" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/STRoomTotalTax"
            }
          },
          "total" : {
            "type" : "number"
          }
        }
      },
      "STRoomTotalTax" : {
        "type" : "object",
        "properties" : {
          "amount" : {
            "type" : "number"
          },
          "chargeUnit" : {
            "type" : "string"
          },
          "effectiveDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "expireDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "taxDescription" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/MessageSubSectionPayload"
            }
          },
          "type" : {
            "type" : "string",
            "enum" : [ "INCLUSIVE", "EXCLUSIVE", "CUMULATIVE" ]
          }
        }
      },
      "STRoomType" : {
        "type" : "object",
        "properties" : {
          "isConverted" : {
            "type" : "boolean"
          },
          "room" : {
            "type" : "boolean"
          },
          "roomType" : {
            "type" : "string"
          },
          "roomTypeCode" : {
            "type" : "string"
          },
          "roomTypeDescription" : {
            "type" : "string"
          }
        }
      },
      "STSearchAir" : {
        "required" : [ "destination", "fromDate", "origin", "travelClass" ],
        "type" : "object",
        "properties" : {
          "adults" : {
            "minimum" : 1,
            "type" : "integer",
            "description" : "Number of adults...",
            "format" : "int32"
          },
          "airline" : {
            "type" : "string",
            "default" : "XX"
          },
          "airlines" : {
            "uniqueItems" : true,
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "changeAirSegments" : {
            "type" : "string"
          },
          "children" : {
            "minimum" : 0,
            "type" : "integer",
            "description" : "Number of children...",
            "format" : "int32"
          },
          "companyId" : {
            "type" : "string"
          },
          "destination" : {
            "type" : "string"
          },
          "fromDate" : {
            "pattern" : "yyyy-MM-dd",
            "type" : "string",
            "format" : "date-time"
          },
          "hideNoLuggageFares" : {
            "type" : "boolean"
          },
          "includeJetstar" : {
            "type" : "boolean"
          },
          "infants" : {
            "minimum" : 0,
            "type" : "integer",
            "description" : "Number of infants...",
            "format" : "int32"
          },
          "isReissue" : {
            "type" : "boolean"
          },
          "minBookingClass" : {
            "type" : "string",
            "enum" : [ "ALL", "ECONOMY", "PREMIUM_ECONOMY", "BUSINESS", "FIRST_CLASS" ]
          },
          "origin" : {
            "type" : "string"
          },
          "preferred" : {
            "type" : "boolean"
          },
          "reissue" : {
            "type" : "boolean"
          },
          "return" : {
            "type" : "boolean"
          },
          "toDate" : {
            "pattern" : "yyyy-MM-dd",
            "type" : "string",
            "format" : "date-time"
          },
          "travelClass" : {
            "type" : "string",
            "enum" : [ "ALL", "ECONOMY", "PREMIUM_ECONOMY", "BUSINESS", "FIRST_CLASS" ]
          },
          "useNewJetStart" : {
            "type" : "boolean"
          }
        }
      },
      "STSearchAirResponse" : {
        "type" : "object",
        "properties" : {
          "arrivalTime" : {
            "type" : "integer",
            "format" : "int32"
          },
          "departureTime" : {
            "type" : "integer",
            "format" : "int32"
          },
          "policy" : {
            "$ref" : "#/components/schemas/PolicyDto"
          },
          "results" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/JourneyResultDto"
            }
          },
          "return" : {
            "type" : "boolean"
          }
        }
      },
      "STSearchCar" : {
        "required" : [ "destination", "fromDate", "origin" ],
        "type" : "object",
        "properties" : {
          "companyId" : {
            "type" : "string"
          },
          "currency" : {
            "type" : "string"
          },
          "destination" : {
            "type" : "string"
          },
          "fromDate" : {
            "pattern" : "yyyy-MM-dd",
            "type" : "string",
            "format" : "date-time"
          },
          "isReissue" : {
            "type" : "boolean"
          },
          "origin" : {
            "type" : "string"
          },
          "pickupLocality" : {
            "type" : "string"
          },
          "reissue" : {
            "type" : "boolean"
          },
          "returnLocality" : {
            "type" : "string"
          },
          "toDate" : {
            "pattern" : "yyyy-MM-dd",
            "type" : "string",
            "format" : "date-time"
          }
        }
      },
      "STSearchHotel" : {
        "required" : [ "fromDate" ],
        "type" : "object",
        "properties" : {
          "address" : {
            "$ref" : "#/components/schemas/STAddress"
          },
          "adults" : {
            "type" : "integer",
            "description" : "Number of guests required (default is 1)",
            "format" : "int32",
            "default" : 1
          },
          "allImages" : {
            "type" : "boolean",
            "description" : "Send this if you need all the images for the hotel"
          },
          "chainCode" : {
            "type" : "string",
            "description" : "Use for single hotel"
          },
          "children" : {
            "type" : "integer",
            "description" : "Number of children (default is 0)",
            "format" : "int32",
            "default" : 0
          },
          "cityCode" : {
            "type" : "string",
            "description" : "Use for single hotel"
          },
          "companyId" : {
            "type" : "string"
          },
          "exchangeToken" : {
            "type" : "string",
            "description" : "Used for paging. Need to send back if the next page is required"
          },
          "fromDate" : {
            "pattern" : "yyyy-MM-dd",
            "type" : "string",
            "format" : "date-time"
          },
          "hotelCode" : {
            "type" : "string",
            "description" : "Targeted single hotel by code"
          },
          "hotelFacilitiesCodes" : {
            "type" : "array",
            "description" : "Search by hotel facilities (only codes)",
            "items" : {
              "type" : "string"
            }
          },
          "includeBreakFast" : {
            "type" : "boolean",
            "description" : "Price will have Meal breakfast included"
          },
          "isReissue" : {
            "type" : "boolean"
          },
          "lsrRating" : {
            "maximum" : 5,
            "minimum" : 1,
            "type" : "array",
            "description" : "Use this rating for LSR (value can be between 1..5)",
            "items" : {
              "type" : "integer",
              "format" : "int32"
            }
          },
          "maxPrice" : {
            "type" : "number",
            "description" : "Search by pricing"
          },
          "maxResult" : {
            "type" : "integer",
            "description" : "Number of results required for the page",
            "format" : "int64"
          },
          "minPrice" : {
            "type" : "number",
            "description" : "Search by pricing"
          },
          "ohgRating" : {
            "type" : "string",
            "description" : "Rating for hotel by OHG",
            "enum" : [ "First_Class", "Luxury_Hotels", "Tourist" ]
          },
          "otaINFCodes" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "DESCRIPTION", "POLICY", "MARKETING", "SPECIAL_INSTRUCTIONS", "OTHER", "AMENITIES", "ATTRACTIONS", "AWARDS", "CORPORATE_LOCATIONS", "DINING", "DRIVING_DIRECTIONS", "FACILITIES", "RECREATION", "SAFETY", "SERVICES", "TRANSPORTATION", "SHORT_DESCRIPTION", "ADVISORY", "GEOCODES", "LOCATION", "ADDRESS", "CONTACT", "PICTURES", "DESCRIPTIVE_CONTENT", "LONG_NAME", "ALIAS_NAME" ]
            }
          },
          "position" : {
            "$ref" : "#/components/schemas/STLatLng"
          },
          "radiusBy" : {
            "type" : "integer",
            "description" : "Radius with position or address",
            "format" : "int32"
          },
          "reissue" : {
            "type" : "boolean"
          },
          "roomAmenityCodes" : {
            "type" : "array",
            "description" : "Search by room amenity (only codes)",
            "items" : {
              "type" : "string"
            }
          },
          "rooms" : {
            "type" : "integer",
            "description" : "Number of rooms required (default is 1)",
            "format" : "int32",
            "default" : 1
          },
          "sortBy" : {
            "type" : "string",
            "description" : "Sort by one of the values",
            "enum" : [ "DESCENDING_ORDER", "NO_SORT", "PROPERTY_CODE", "PROPERTY_NAME", "PROPERTY_CODE_ASC", "PROPERTY_CODE_DESC", "PROPERTY_NAME_ASC", "PROPERTY_NAME_DESC", "RATES_ASC", "RATES_DESC" ]
          },
          "toDate" : {
            "pattern" : "yyyy-MM-dd",
            "type" : "string",
            "format" : "date-time"
          },
          "trackerId" : {
            "type" : "string",
            "description" : "Going to be used in cache"
          }
        }
      },
      "STSearchResponse" : {
        "type" : "object"
      },
      "STSellHotel" : {
        "required" : [ "bookCompany", "cardDetails", "contactDetails", "paymentType", "pnr", "profile" ],
        "type" : "object",
        "properties" : {
          "approvalId" : {
            "type" : "string"
          },
          "bookCompany" : {
            "$ref" : "#/components/schemas/STBookCompany"
          },
          "booking_CODE_TYPE" : {
            "type" : "string"
          },
          "cardDetails" : {
            "$ref" : "#/components/schemas/STCreditCardDetails"
          },
          "contactDetails" : {
            "$ref" : "#/components/schemas/STGuestContactDetails"
          },
          "email" : {
            "type" : "string"
          },
          "hotel_SERVICE" : {
            "type" : "string"
          },
          "paymentType" : {
            "type" : "string",
            "enum" : [ "Guaranteed", "Deposit" ]
          },
          "pnr" : {
            "$ref" : "#/components/schemas/STPnr"
          },
          "profile" : {
            "$ref" : "#/components/schemas/STBookProfile"
          },
          "quoteId" : {
            "type" : "string"
          },
          "tripId" : {
            "type" : "string"
          },
          "tripNumber" : {
            "type" : "string"
          },
          "voucher" : {
            "type" : "string"
          }
        }
      },
      "STServiceType" : {
        "type" : "object",
        "properties" : {
          "comments" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/MessageSubSectionPayload"
            }
          },
          "inclusive" : {
            "type" : "boolean"
          },
          "inventoryCode" : {
            "type" : "string"
          },
          "phKey" : {
            "type" : "string"
          },
          "type" : {
            "type" : "string",
            "enum" : [ "CUSTOMER", "CRO_CUSTOMER_RESERVATIONS_OFFICE_", "CORPORATION_REPRESENTATIVE", "COMPANY", "TRAVEL_AGENCY", "AIRLINE", "WHOLESALER", "CAR_RENTAL", "GROUP", "HOTEL", "TOUR_OPERATOR", "CRUISE_LINE", "INTERNET_BROKER", "RESERVATION", "CANCELLATION", "REFERENCE", "MEETING_PLANNING_AGENCY", "OTHER", "INSURANCE_AGENCY", "INSURANCE_AGENT", "PROFILE", "ERSP_ELECTRONIC_RESERVATION_SERVICE_PROVIDER_" ]
          }
        }
      },
      "SaveApprovalRequest" : {
        "type" : "object",
        "properties" : {
          "airAmount" : {
            "type" : "number"
          },
          "approvalComment" : {
            "type" : "string"
          },
          "branch" : {
            "type" : "string"
          },
          "carAmount" : {
            "type" : "number"
          },
          "companyFields" : {
            "$ref" : "#/components/schemas/CompanyFieldDto"
          },
          "companyId" : {
            "type" : "string"
          },
          "costCenter" : {
            "type" : "string"
          },
          "currency" : {
            "type" : "string"
          },
          "department" : {
            "type" : "string"
          },
          "description" : {
            "type" : "string"
          },
          "hotelAmount" : {
            "type" : "number"
          },
          "location" : {
            "type" : "string"
          },
          "name" : {
            "type" : "string"
          },
          "segmentId" : {
            "type" : "string"
          },
          "status" : {
            "type" : "string",
            "enum" : [ "NEW", "APPROVED", "REJECTED", "CANCELLED", "PENDING", "FAILED", "BOOKED", "POLICY", "CHANGE" ]
          },
          "travelApprovalId" : {
            "type" : "string"
          }
        }
      },
      "SeatDetailDto" : {
        "type" : "object",
        "properties" : {
          "seatDisplay" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/CabinRowDto"
            }
          },
          "seatSelect" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/ValueDisplayDto"
            }
          }
        }
      },
      "SegmentDetailDto" : {
        "type" : "object",
        "properties" : {
          "conditions" : {
            "type" : "string"
          },
          "creationDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "destination" : {
            "type" : "string"
          },
          "display" : {
            "type" : "string"
          },
          "expiryDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "fromDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "origin" : {
            "type" : "string"
          },
          "toDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "total" : {
            "type" : "number"
          },
          "travelType" : {
            "type" : "string",
            "enum" : [ "AIR", "HOTEL", "CAR", "INSURANCE" ]
          }
        }
      },
      "SegmentDto" : {
        "type" : "object",
        "properties" : {
          "approvalStatus" : {
            "type" : "string"
          },
          "cost" : {
            "type" : "number"
          },
          "fromDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "grandTotal" : {
            "type" : "number"
          },
          "id" : {
            "type" : "string"
          },
          "toDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "type" : {
            "type" : "string"
          }
        }
      },
      "SegmentPaymentDto" : {
        "type" : "object",
        "properties" : {
          "discount" : {
            "type" : "number"
          },
          "externalOnPickup" : {
            "type" : "boolean"
          },
          "originalSupplier" : {
            "type" : "string"
          },
          "payToExternal" : {
            "type" : "number"
          },
          "payToExternalOriginal" : {
            "type" : "number"
          },
          "payToExternalOriginalCurrency" : {
            "type" : "string"
          },
          "payToExternalSystem" : {
            "type" : "number"
          },
          "total" : {
            "type" : "number"
          },
          "totalIncExternal" : {
            "type" : "number"
          }
        }
      },
      "SegmentResponse" : {
        "type" : "object",
        "properties" : {
          "allowUserEdit" : {
            "type" : "boolean"
          },
          "companyId" : {
            "type" : "string"
          },
          "cost" : {
            "type" : "string"
          },
          "dateFrom" : {
            "pattern" : "yyyy-MM-dd'T'HH:mm:ss",
            "type" : "string",
            "format" : "date-time"
          },
          "dateTo" : {
            "pattern" : "yyyy-MM-dd'T'HH:mm:ss",
            "type" : "string",
            "format" : "date-time"
          },
          "destination" : {
            "type" : "string"
          },
          "notes" : {
            "type" : "string"
          },
          "passengers" : {
            "uniqueItems" : true,
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/PassengerDto"
            }
          },
          "quoteId" : {
            "type" : "string"
          },
          "reloc" : {
            "type" : "string"
          },
          "travelApprovalId" : {
            "type" : "string"
          },
          "travelEventId" : {
            "type" : "string"
          }
        }
      },
      "Session" : {
        "type" : "object",
        "properties" : {
          "securityToken" : {
            "type" : "string",
            "xml" : {
              "name" : "SecurityToken"
            }
          },
          "sequenceNumber" : {
            "type" : "string",
            "xml" : {
              "name" : "SequenceNumber"
            }
          },
          "sessionId" : {
            "type" : "string",
            "xml" : {
              "name" : "SessionId"
            }
          },
          "transactionStatusCode" : {
            "type" : "string",
            "xml" : {
              "name" : "TransactionStatusCode",
              "attribute" : true
            }
          }
        },
        "xml" : {
          "name" : "Session",
          "namespace" : "http://xml.amadeus.com/2010/06/Session_v3"
        }
      },
      "StateProvType" : {
        "type" : "object",
        "properties" : {
          "stateCode" : {
            "type" : "string",
            "xml" : {
              "name" : "StateCode",
              "attribute" : true
            }
          },
          "value" : {
            "type" : "string"
          }
        }
      },
      "StatefulRequestSTPNRRequest" : {
        "type" : "object",
        "properties" : {
          "body" : {
            "$ref" : "#/components/schemas/STPNRRequest"
          },
          "flowLink" : {
            "$ref" : "#/components/schemas/TransactionFlowLinkType"
          },
          "session" : {
            "$ref" : "#/components/schemas/Session"
          }
        }
      },
      "StatefulRequestSTPricingRequest" : {
        "type" : "object",
        "properties" : {
          "body" : {
            "$ref" : "#/components/schemas/STPricingRequest"
          },
          "flowLink" : {
            "$ref" : "#/components/schemas/TransactionFlowLinkType"
          },
          "session" : {
            "$ref" : "#/components/schemas/Session"
          }
        }
      },
      "StatefulRequestSTSellHotel" : {
        "type" : "object",
        "properties" : {
          "body" : {
            "$ref" : "#/components/schemas/STSellHotel"
          },
          "flowLink" : {
            "$ref" : "#/components/schemas/TransactionFlowLinkType"
          },
          "session" : {
            "$ref" : "#/components/schemas/Session"
          }
        }
      },
      "StatefulResponseSTHotel" : {
        "type" : "object",
        "properties" : {
          "errorMessages" : {
            "type" : "string"
          },
          "flowLink" : {
            "$ref" : "#/components/schemas/TransactionFlowLinkType"
          },
          "response" : {
            "$ref" : "#/components/schemas/STHotel"
          },
          "session" : {
            "$ref" : "#/components/schemas/Session"
          },
          "timeStamp" : {
            "type" : "string",
            "format" : "date-time"
          }
        }
      },
      "StatefulResponseSTPnr" : {
        "type" : "object",
        "properties" : {
          "errorMessages" : {
            "type" : "string"
          },
          "flowLink" : {
            "$ref" : "#/components/schemas/TransactionFlowLinkType"
          },
          "response" : {
            "$ref" : "#/components/schemas/STPnr"
          },
          "session" : {
            "$ref" : "#/components/schemas/Session"
          },
          "timeStamp" : {
            "type" : "string",
            "format" : "date-time"
          }
        }
      },
      "StatefulResponseSTRoom" : {
        "type" : "object",
        "properties" : {
          "errorMessages" : {
            "type" : "string"
          },
          "flowLink" : {
            "$ref" : "#/components/schemas/TransactionFlowLinkType"
          },
          "response" : {
            "$ref" : "#/components/schemas/STRoom"
          },
          "session" : {
            "$ref" : "#/components/schemas/Session"
          },
          "timeStamp" : {
            "type" : "string",
            "format" : "date-time"
          }
        }
      },
      "StreetNmbr" : {
        "type" : "object",
        "properties" : {
          "pobox" : {
            "type" : "string"
          },
          "ruralRouteNmbr" : {
            "type" : "string",
            "xml" : {
              "name" : "RuralRouteNmbr",
              "attribute" : true
            }
          },
          "streetDirection" : {
            "type" : "string",
            "xml" : {
              "name" : "StreetDirection",
              "attribute" : true
            }
          },
          "streetNmbrSuffix" : {
            "type" : "string",
            "xml" : {
              "name" : "StreetNmbrSuffix",
              "attribute" : true
            }
          },
          "value" : {
            "type" : "string"
          }
        }
      },
      "SupplierPaymentDto" : {
        "type" : "object",
        "properties" : {
          "amount" : {
            "type" : "number"
          },
          "currency" : {
            "type" : "string"
          },
          "currencyMinor" : {
            "type" : "integer",
            "format" : "int32"
          },
          "displayOriginal" : {
            "type" : "boolean"
          },
          "name" : {
            "type" : "string"
          },
          "originalAmount" : {
            "type" : "number"
          },
          "originalCurrency" : {
            "type" : "string"
          },
          "originalCurrencyMinor" : {
            "type" : "integer",
            "format" : "int32"
          },
          "pickupAmount" : {
            "type" : "number"
          }
        }
      },
      "SurchargeDto" : {
        "type" : "object",
        "properties" : {
          "ax" : {
            "type" : "number"
          },
          "bc" : {
            "type" : "number"
          },
          "db" : {
            "type" : "number"
          },
          "mc" : {
            "type" : "number"
          },
          "vi" : {
            "type" : "number"
          }
        }
      },
      "TransactionFlowLinkType" : {
        "type" : "object",
        "properties" : {
          "consumer" : {
            "$ref" : "#/components/schemas/ConsumerType"
          },
          "receiver" : {
            "$ref" : "#/components/schemas/ReceiverType"
          }
        }
      },
      "TravelApprovalDto" : {
        "type" : "object",
        "properties" : {
          "airbudget" : {
            "type" : "number"
          },
          "applicant" : {
            "type" : "string"
          },
          "approvalcomment" : {
            "type" : "string"
          },
          "branch" : {
            "type" : "string"
          },
          "carbudget" : {
            "type" : "number"
          },
          "costcentre" : {
            "type" : "string"
          },
          "currency" : {
            "type" : "string"
          },
          "department" : {
            "type" : "string"
          },
          "description" : {
            "type" : "string",
            "description" : "Description of the travel",
            "example" : "Description"
          },
          "hotelbudget" : {
            "type" : "number",
            "description" : "Hotel budget",
            "example" : 5000
          },
          "location" : {
            "type" : "string"
          },
          "myApproval" : {
            "type" : "boolean"
          },
          "name" : {
            "type" : "string"
          },
          "segments" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/SegmentDto"
            }
          },
          "status" : {
            "type" : "string"
          },
          "travelapprovalid" : {
            "type" : "string"
          }
        },
        "description" : "List of approvals"
      },
      "TravelApprovalResponse" : {
        "type" : "object",
        "properties" : {
          "approvals" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/TravelApprovalDto"
            }
          },
          "hasApprover" : {
            "type" : "boolean"
          }
        }
      },
      "TravelDocumentDto" : {
        "type" : "object",
        "properties" : {
          "countryOfIssue" : {
            "type" : "string"
          },
          "id" : {
            "type" : "string"
          },
          "passportExpire" : {
            "type" : "string"
          },
          "passportIssue" : {
            "type" : "string"
          },
          "passportNumber" : {
            "type" : "string"
          },
          "passportNumberMask" : {
            "type" : "string"
          }
        }
      },
      "TravellerDto" : {
        "required" : [ "familyName", "givenName" ],
        "type" : "object",
        "properties" : {
          "address" : {
            "$ref" : "#/components/schemas/AddressDto"
          },
          "birthDate" : {
            "pattern" : "yyyy-MM-dd'T'HH:mm:ss",
            "type" : "string",
            "format" : "date-time"
          },
          "client" : {
            "type" : "boolean"
          },
          "email" : {
            "type" : "string"
          },
          "familyName" : {
            "type" : "string"
          },
          "gender" : {
            "type" : "string",
            "enum" : [ "M", "F", "X" ]
          },
          "givenName" : {
            "type" : "string"
          },
          "id" : {
            "type" : "string"
          },
          "loyaltyAccounts" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/LoyaltyAccountDto"
            }
          },
          "mobilePhone" : {
            "$ref" : "#/components/schemas/PhoneDto"
          },
          "phone" : {
            "$ref" : "#/components/schemas/PhoneDto"
          },
          "status" : {
            "type" : "string"
          },
          "title" : {
            "type" : "string",
            "enum" : [ "Ms", "Miss", "Mrs", "Mr", "Master", "Rev", "Fr", "Dr", "Atty", "Prof", "Hon", "Pres", "Gov", "Coach", "Ofc", "Msgr", "Sr", "Br", "Supt", "Rep", "Sen", "Amb", "Treas", "Sec", "Pvt", "Cpl", "Sgt", "Adm", "Maj", "Capt", "Cmdr", "Lt", "Lt Col", "Col", "Gen" ]
          },
          "travelDocuments" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/TravelDocumentDto"
            }
          },
          "travellerType" : {
            "type" : "string"
          }
        }
      },
      "TripCartPaymentInvoiceDto" : {
        "type" : "object",
        "properties" : {
          "invoiceDate" : {
            "type" : "string"
          },
          "invoiceReference" : {
            "type" : "string"
          },
          "invoiceTotal" : {
            "type" : "string"
          },
          "paymentStatus" : {
            "type" : "string"
          },
          "status" : {
            "type" : "string"
          },
          "tripId" : {
            "type" : "string"
          }
        }
      },
      "TripDto" : {
        "type" : "object",
        "properties" : {
          "branch" : {
            "type" : "string"
          },
          "company" : {
            "type" : "string"
          },
          "companyDescription" : {
            "type" : "string"
          },
          "companyField1" : {
            "type" : "string"
          },
          "companyField2" : {
            "type" : "string"
          },
          "companyField3" : {
            "type" : "string"
          },
          "companyId" : {
            "type" : "string"
          },
          "costCentre" : {
            "type" : "string"
          },
          "creationDate" : {
            "pattern" : "yyyy-MM-dd'T'HH:mm:ss",
            "type" : "string",
            "format" : "date-time"
          },
          "currency" : {
            "type" : "string"
          },
          "current" : {
            "type" : "boolean"
          },
          "department" : {
            "type" : "string"
          },
          "id" : {
            "type" : "string"
          },
          "linked" : {
            "type" : "boolean"
          },
          "location" : {
            "type" : "string"
          },
          "passive" : {
            "type" : "boolean"
          },
          "pax" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/TravellerDto"
            }
          },
          "reference" : {
            "type" : "string"
          },
          "segments" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/TripSegmentDto"
            }
          },
          "sortCreateDate" : {
            "type" : "string"
          },
          "sortDate" : {
            "type" : "string"
          },
          "totalInvoiced" : {
            "type" : "number"
          },
          "tripNumber" : {
            "type" : "string"
          }
        }
      },
      "TripRequest" : {
        "type" : "object",
        "properties" : {
          "fromDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "includeHistory" : {
            "type" : "boolean"
          },
          "showAllTrips" : {
            "type" : "boolean"
          },
          "showTravellers" : {
            "type" : "boolean"
          },
          "toDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "travellerId" : {
            "type" : "string"
          }
        }
      },
      "TripSegmentDto" : {
        "type" : "object",
        "properties" : {
          "allowUserEdit" : {
            "type" : "boolean"
          },
          "approvalId" : {
            "type" : "string",
            "description" : "Only used with passive segments..."
          },
          "canChange" : {
            "type" : "boolean"
          },
          "canChangeManual" : {
            "type" : "boolean"
          },
          "canChangeMessage" : {
            "type" : "string"
          },
          "canChangePhone" : {
            "type" : "string"
          },
          "companyId" : {
            "type" : "string"
          },
          "cost" : {
            "type" : "number"
          },
          "creationDate" : {
            "pattern" : "yyyy-MM-dd'T'HH:mm:ss",
            "type" : "string",
            "description" : "Typically used with passive segments...",
            "format" : "date-time"
          },
          "fromDate" : {
            "pattern" : "yyyy-MM-dd'T'HH:mm:ss",
            "type" : "string",
            "format" : "date-time"
          },
          "id" : {
            "type" : "string"
          },
          "index" : {
            "type" : "string"
          },
          "info" : {
            "type" : "string"
          },
          "notes" : {
            "type" : "string"
          },
          "passive" : {
            "type" : "boolean",
            "description" : "Only used with passive segments..."
          },
          "pax" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/TravellerDto"
            }
          },
          "reloc" : {
            "type" : "string"
          },
          "status" : {
            "type" : "string"
          },
          "toDate" : {
            "pattern" : "yyyy-MM-dd'T'HH:mm:ss",
            "type" : "string",
            "format" : "date-time"
          },
          "type" : {
            "type" : "string"
          }
        }
      },
      "TypeValueDto" : {
        "type" : "object",
        "properties" : {
          "type" : {
            "type" : "string"
          },
          "value" : {
            "type" : "string"
          }
        }
      },
      "ValidTypeDto" : {
        "type" : "object",
        "properties" : {
          "type" : {
            "type" : "string"
          },
          "valid" : {
            "type" : "boolean"
          }
        }
      },
      "ValueDisplayDto" : {
        "type" : "object",
        "properties" : {
          "display" : {
            "type" : "string"
          },
          "value" : {
            "type" : "string"
          }
        }
      }
    }
  }
}